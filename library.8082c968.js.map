{"mappings":"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","sources":["src/js/film/film.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@firebase/database/src/core/storage/DOMStorageWrapper.ts","node_modules/@firebase/database/src/core/storage/MemoryStorage.ts","node_modules/@firebase/database/src/core/storage/storage.ts","node_modules/@firebase/database/src/core/util/util.ts","node_modules/@firebase/database/src/core/AppCheckTokenProvider.ts","node_modules/@firebase/database/src/core/AuthTokenProvider.ts","node_modules/@firebase/database/src/core/RepoInfo.ts","node_modules/@firebase/database/src/core/stats/StatsCollection.ts","node_modules/@firebase/database/src/core/stats/StatsManager.ts","node_modules/@firebase/database/src/realtime/polling/PacketReceiver.ts","node_modules/@firebase/database/src/realtime/BrowserPollConnection.ts","node_modules/@firebase/database/src/realtime/WebSocketConnection.ts","node_modules/@firebase/database/src/realtime/TransportManager.ts","node_modules/@firebase/database/src/realtime/Connection.ts","node_modules/@firebase/database/src/core/ServerActions.ts","node_modules/@firebase/database/src/core/util/EventEmitter.ts","node_modules/@firebase/database/src/core/util/OnlineMonitor.ts","node_modules/@firebase/database/src/core/util/Path.ts","node_modules/@firebase/database/src/core/util/VisibilityMonitor.ts","node_modules/@firebase/database/src/core/PersistentConnection.ts","node_modules/@firebase/database/src/core/snap/Node.ts","node_modules/@firebase/database/src/core/snap/indexes/Index.ts","node_modules/@firebase/database/src/core/snap/indexes/KeyIndex.ts","node_modules/@firebase/database/src/core/util/SortedMap.ts","node_modules/@firebase/database/src/core/snap/comparators.ts","node_modules/@firebase/database/src/core/snap/snap.ts","node_modules/@firebase/database/src/core/snap/LeafNode.ts","node_modules/@firebase/database/src/core/snap/indexes/PriorityIndex.ts","node_modules/@firebase/database/src/core/snap/childSet.ts","node_modules/@firebase/database/src/core/snap/IndexMap.ts","node_modules/@firebase/database/src/core/snap/ChildrenNode.ts","node_modules/@firebase/database/src/core/snap/nodeFromJSON.ts","node_modules/@firebase/database/src/core/snap/indexes/PathIndex.ts","node_modules/@firebase/database/src/core/snap/indexes/ValueIndex.ts","node_modules/@firebase/database/src/core/util/NextPushId.ts","node_modules/@firebase/database/src/core/view/Change.ts","node_modules/@firebase/database/src/core/view/filter/IndexedFilter.ts","node_modules/@firebase/database/src/core/view/filter/RangedFilter.ts","node_modules/@firebase/database/src/core/view/filter/LimitedFilter.ts","node_modules/@firebase/database/src/core/view/QueryParams.ts","node_modules/@firebase/database/src/core/ReadonlyRestClient.ts","node_modules/@firebase/database/src/core/SnapshotHolder.ts","node_modules/@firebase/database/src/core/SparseSnapshotTree.ts","node_modules/@firebase/database/src/core/stats/StatsListener.ts","node_modules/@firebase/database/src/core/stats/StatsReporter.ts","node_modules/@firebase/database/src/core/operation/Operation.ts","node_modules/@firebase/database/src/core/operation/AckUserWrite.ts","node_modules/@firebase/database/src/core/operation/ListenComplete.ts","node_modules/@firebase/database/src/core/operation/Overwrite.ts","node_modules/@firebase/database/src/core/operation/Merge.ts","node_modules/@firebase/database/src/core/view/ViewCache.ts","node_modules/@firebase/database/src/core/util/ImmutableTree.ts","node_modules/@firebase/database/src/core/CompoundWrite.ts","node_modules/@firebase/database/src/core/WriteTree.ts","node_modules/@firebase/database/src/core/view/CompleteChildSource.ts","node_modules/@firebase/database/src/core/view/ViewProcessor.ts","node_modules/@firebase/database/src/core/view/View.ts","node_modules/@firebase/database/src/core/SyncPoint.ts","node_modules/@firebase/database/src/core/SyncTree.ts","node_modules/@firebase/database/src/core/util/ServerValues.ts","node_modules/@firebase/database/src/core/util/Tree.ts","node_modules/@firebase/database/src/core/util/validation.ts","node_modules/@firebase/database/src/core/view/EventQueue.ts","node_modules/@firebase/database/src/core/Repo.ts","node_modules/@firebase/database/src/core/util/libs/parser.ts","node_modules/@firebase/database/src/core/view/Event.ts","node_modules/@firebase/database/src/core/view/EventRegistration.ts","node_modules/@firebase/database/src/api/OnDisconnect.ts","node_modules/@firebase/database/src/api/Reference_impl.ts","node_modules/@firebase/database/src/api/Database.ts","node_modules/@firebase/database/src/register.ts","node_modules/@firebase/database/src/api/ServerValue.ts","node_modules/@firebase/database/src/api/Transaction.ts","node_modules/@firebase/database/src/api/test_access.ts","node_modules/@firebase/database/src/index.ts","node_modules/@firebase/database/src/realtime/Constants.ts","node_modules/@swc/helpers/lib/_assert_this_initialized.js","node_modules/@swc/helpers/lib/_async_to_generator.js","node_modules/@swc/helpers/lib/_inherits.js","node_modules/@swc/helpers/lib/_set_prototype_of.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/@swc/helpers/lib/_type_of.js","node_modules/@swc/helpers/lib/_create_super.js","node_modules/@swc/helpers/lib/_is_native_reflect_construct.js","node_modules/@swc/helpers/lib/_get_prototype_of.js","node_modules/@swc/helpers/lib/_possible_constructor_return.js","node_modules/regenerator-runtime/runtime.js","node_modules/@firebase/app/src/platformLoggerService.ts","node_modules/@firebase/app/src/logger.ts","node_modules/@firebase/app/src/internal.ts","node_modules/@firebase/app/src/firebaseApp.ts","node_modules/@firebase/app/src/api.ts","node_modules/@firebase/app/src/indexeddb.ts","node_modules/@firebase/app/src/heartbeatService.ts","node_modules/@firebase/app/src/registerCoreComponents.ts","node_modules/@firebase/app/src/index.ts","node_modules/@swc/helpers/lib/_define_property.js","node_modules/@firebase/component/src/component.ts","node_modules/@firebase/component/src/provider.ts","node_modules/@firebase/component/src/component_container.ts","node_modules/@firebase/util/src/constants.ts","node_modules/@firebase/util/src/crypt.ts","node_modules/@firebase/util/src/deepCopy.ts","node_modules/@firebase/util/src/deferred.ts","node_modules/@firebase/util/src/emulator.ts","node_modules/@firebase/util/src/environment.ts","node_modules/@firebase/util/src/errors.ts","node_modules/@firebase/util/src/json.ts","node_modules/@firebase/util/src/jwt.ts","node_modules/@firebase/util/src/obj.ts","node_modules/@firebase/util/src/promise.ts","node_modules/@firebase/util/src/query.ts","node_modules/@firebase/util/src/sha1.ts","node_modules/@firebase/util/src/subscribe.ts","node_modules/@firebase/util/src/utf8.ts","node_modules/@swc/helpers/lib/_wrap_native_super.js","node_modules/@swc/helpers/lib/_construct.js","node_modules/@swc/helpers/lib/_is_native_function.js","node_modules/@firebase/logger/src/logger.ts","node_modules/idb/build/index.js","node_modules/@swc/helpers/lib/_object_spread.js","node_modules/idb/build/wrap-idb-value.js","node_modules/process/browser.js","src/js/authorization-modal.js","src/js/utils/authentefication.js","src/js/utils/regValidation.js","src/js/utils/signOutBtnHandler.js","src/js/modal-form.js","node_modules/axios/index.js","node_modules/axios/lib/axios.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/defaults/index.js","node_modules/axios/lib/helpers/normalizeHeaderName.js","node_modules/axios/lib/core/AxiosError.js","node_modules/axios/lib/defaults/transitional.js","node_modules/axios/lib/helpers/toFormData.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/cancel/CanceledError.js","node_modules/axios/lib/helpers/parseProtocol.js","node_modules/axios/lib/helpers/null.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/env/data.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/isAxiosError.js","src/js/apiKey.js","src/js/fetches/getMovieDetails.js","src/js/utils/modalBtnAction.js","src/js/utils/scrollToTop.js"],"sourcesContent":["// import { getCurrentGenres } from '../modal-form';\nimport {\n  getDatabase,\n  ref,\n  set,\n  child,\n  get,\n  push,\n  remove,\n} from 'firebase/database';\n\nexport class Film {\n  static createWithoutAuth(newFilm, folder) {\n    const all = getFilmsFromLocalStorage(folder);\n    all.push(newFilm);\n    localStorage.setItem(`${folder}`, JSON.stringify(all));\n  }\n  static removeWithoutAuth(filmId, folder) {\n    const index = findFilmById(filmId, folder);\n    const filmsList = getFilmsFromLocalStorage(folder);\n    filmsList.splice(index, 1);\n    localStorage.setItem(`${folder}`, JSON.stringify(filmsList));\n  }\n\n  static removeWithAuth(filmId, folder, userName) {\n    const db = getDatabase();\n    Film.removeWithoutAuth(filmId, folder);\n    remove(ref(db, `UsersList/${userName}/${folder}/` + `${filmId}`));\n  }\n\n  static createWithtAuth(newFilm, folder, userName) {\n    const db = getDatabase();\n    const dbRef = ref(db);\n    Film.createWithoutAuth(newFilm, folder);\n    set(ref(db, `UsersList/${userName}/${folder}/` + `${newFilm.id}`), {\n      release_date: newFilm.release_date,\n      genres: newFilm.genres,\n      id: newFilm.id,\n      poster_path: newFilm.poster_path,\n      title: newFilm.title,\n      vote_average: newFilm.vote_average,\n    }).catch(console.log);\n  }\n\n  static renderWatchedFilms(folder, rewWords) {\n    const films = getFilmsFromLocalStorage(folder);\n    console.log(films.length);\n    const list = films.length\n      ? films.map(createOneFilmCard).join('')\n      : `<p style=\"text-align: center;\">У вас ещё нету ${rewWords} фильмов :(</p>`;\n    document.querySelector('.library-list').innerHTML = list;\n  }\n\n  static isFilmExistInWatched(filmId) {\n    if (findFilmById(filmId, 'watchedFilms') === -1) {\n      return ['add', 'Add to watched'];\n    } else {\n      return ['remove', 'Remove from watched'];\n    }\n  }\n\n  static isFilmExistInQueue(filmId) {\n    if (findFilmById(filmId, 'queueFilms') === -1) {\n      return ['add', 'Add to queue'];\n    } else {\n      return ['remove', 'Remove from queue'];\n    }\n  }\n  static setCurrentUserFilmList(userName) {\n    const db = getDatabase();\n    const dbRef = ref(db);\n\n    get(child(dbRef, `UsersList/${userName}/` + 'watchedFilms')).then(\n      snapshot => {\n        if (snapshot.exists()) {\n          //   console.log(dbDataHandler(snapshot.val()));\n          localStorage.setItem(\n            'watchedFilms',\n            JSON.stringify(dbDataHandler(snapshot.val()))\n          );\n        }\n      }\n    );\n\n    get(child(dbRef, `UsersList/${userName}/` + 'queueFilms')).then(\n      snapshot => {\n        if (snapshot.exists()) {\n          localStorage.setItem(\n            'queueFilms',\n            JSON.stringify(dbDataHandler(snapshot.val()))\n          );\n        }\n      }\n    );\n  }\n}\n\nfunction getFilmsFromLocalStorage(folder) {\n  return JSON.parse(localStorage.getItem(`${folder}`) || '[]');\n}\n\nfunction findFilmById(filmId, folder) {\n  const filmsList = getFilmsFromLocalStorage(folder);\n  return filmsList.findIndex(film => film.id === filmId);\n}\n\nfunction getCurrentGenres(genreList) {\n  return genreList.map(singleGenre => {\n    return singleGenre.name;\n  });\n}\n\nfunction createOneFilmCard(film) {\n  const img =\n    'https://raw.githubusercontent.com/GrooT921/team-project-filmoteka/main/src/images/no-images-found.png';\n  const year = new Date(film.release_date).getFullYear();\n  const genresName = getCurrentGenres(film.genres);\n  const genresNameDotted =\n    genresName.length > 2\n      ? genresName.slice(0, 2).join(', ') + ' ...'\n      : genresName.join(', ');\n  return `<li class=\"card__film\" >\n        <div class=\"thumb\" data-id='${film.id}'>\n          <img src=\"https://image.tmdb.org/t/p/w500${film.poster_path}\" alt=\"${\n    film.title\n  }\" onerror='this.src=\"${img}\"'/>\n        </div>\n        <h2 class=\"card__title\">${film.title}</h2>\n        <p class=\"card__text\">\n          <span class=\"genres\">${genresNameDotted}</span> | <span class=\"release\">${year}</span> <span\n            class=\"card__vote_average\">${film.vote_average.toFixed(1)}</span>\n        </p>\n      </li>`;\n}\n\nfunction dbDataHandler(data) {\n  let list = [];\n  for (const key in data) {\n    const element = data[key];\n    list.push(element);\n  }\n  return list;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(\n          payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          }\n        );\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    return (\n      this.index_.compare(this.getStartPost(), node) <= 0 &&\n      this.index_.compare(node, this.getEndPost()) <= 0\n    );\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          let inRange;\n          if (this.reverse_) {\n            inRange =\n              this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange =\n              this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n        let startPost;\n        let endPost;\n        let cmp;\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          const indexCompare = this.index_.getCompare();\n          cmp = (a: NamedNode, b: NamedNode) => indexCompare(b, a);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        let count = 0;\n        let foundStartPost = false;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n          const inRange =\n            foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { predecessor, successor } from '../util/NextPushId';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false;\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false;\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  hasStartAfter(): boolean {\n    return this.startAfterSet_;\n  }\n\n  hasEndBefore(): boolean {\n    return this.endBeforeSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = successor(indexValue as string);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    let childKey: string;\n    if (key == null) {\n      childKey = MAX_NAME;\n    } else {\n      childKey = successor(key);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, childKey);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let childKey: string;\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = predecessor(indexValue as string);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    if (key == null) {\n      childKey = MIN_NAME;\n    } else {\n      childKey = predecessor(key);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, childKey);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    qs[REST_QUERY_CONSTANTS.START_AT] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[REST_QUERY_CONSTANTS.START_AT] +=\n        ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    qs[REST_QUERY_CONSTANTS.END_AT] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[REST_QUERY_CONSTANTS.END_AT] +=\n        ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoOnDisconnectCancel,\n  repoOnDisconnectSet,\n  repoOnDisconnectSetWithPriority,\n  repoOnDisconnectUpdate\n} from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport {\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validatePriority,\n  validateWritablePath\n} from '../core/util/validation';\n\n/**\n * The `onDisconnect` class allows you to write or clear data when your client\n * disconnects from the Database server. These updates occur whether your\n * client disconnects cleanly or not, so you can rely on them to clean up data\n * even if a connection is dropped or a client crashes.\n *\n * The `onDisconnect` class is most commonly used to manage presence in\n * applications where it is useful to detect how many clients are connected and\n * when other clients disconnect. See\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information.\n *\n * To avoid problems when a connection is dropped before the requests can be\n * transferred to the Database server, these functions should be called before\n * writing any data.\n *\n * Note that `onDisconnect` operations are only triggered once. If you want an\n * operation to occur each time a disconnect occurs, you'll need to re-establish\n * the `onDisconnect` operations each time you reconnect.\n */\nexport class OnDisconnect {\n  /** @hideconstructor */\n  constructor(private _repo: Repo, private _path: Path) {}\n\n  /**\n   * Cancels all previously queued `onDisconnect()` set or update events for this\n   * location and all children.\n   *\n   * If a write has been queued for this location via a `set()` or `update()` at a\n   * parent location, the write at this location will be canceled, though writes\n   * to sibling locations will still occur.\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  cancel(): Promise<void> {\n    const deferred = new Deferred<void>();\n    repoOnDisconnectCancel(\n      this._repo,\n      this._path,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is deleted when the client is disconnected\n   * (due to closing the browser, navigating to a new page, or network issues).\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  remove(): Promise<void> {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      null,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value when the\n   * client is disconnected (due to closing the browser, navigating to a new page,\n   * or network issues).\n   *\n   * `set()` is especially useful for implementing \"presence\" systems, where a\n   * value should be changed or cleared when a user disconnects so that they\n   * appear \"offline\" to other users. See\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n   * for more information.\n   *\n   * Note that `onDisconnect` operations are only triggered once. If you want an\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\n   * the `onDisconnect` operations each time.\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  set(value: unknown): Promise<void> {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      value,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value and priority\n   * when the client is disconnected (due to closing the browser, navigating to a\n   * new page, or network issues).\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @param priority - The priority to be written (string, number, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null\n  ): Promise<void> {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      value,\n      this._path,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSetWithPriority(\n      this._repo,\n      this._path,\n      value,\n      priority,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Writes multiple values at this location when the client is disconnected (due\n   * to closing the browser, navigating to a new page, or network issues).\n   *\n   * The `values` argument contains multiple property-value pairs that will be\n   * written to the Database together. Each child property can either be a simple\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\n   * from the current location to the data to update.\n   *\n   * As opposed to the `set()` method, `update()` can be use to selectively update\n   * only the referenced properties at the current location (instead of replacing\n   * all the child properties at the current location).\n   *\n   * @param values - Object containing multiple values.\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  update(values: object): Promise<void> {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      values,\n      this._path,\n      false\n    );\n    const deferred = new Deferred<void>();\n    repoOnDisconnectUpdate(\n      this._repo,\n      this._path,\n      values as Record<string, unknown>,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `DataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: DataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value lesss than or equal\n * to the specified value and a a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  return _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n\n/**\n * Returns a placeholder value for auto-populating the current timestamp (time\n * since the Unix epoch, in milliseconds) as determined by the Firebase\n * servers.\n */\nexport function serverTimestamp(): object {\n  return SERVER_TIMESTAMP;\n}\n\n/**\n * Returns a placeholder value that can be used to atomically increment the\n * current database value by the provided delta.\n *\n * @param delta - the amount to modify the current value atomically.\n * @returns A placeholder value for modifying data atomically server-side.\n */\nexport function increment(delta: number): object {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance, Deferred } from '@firebase/util';\n\nimport { repoStartTransaction } from '../core/Repo';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { validateWritablePath } from '../core/util/validation';\n\nimport { DatabaseReference } from './Reference';\nimport { DataSnapshot, onValue, ReferenceImpl } from './Reference_impl';\n\n/** An options object to configure transactions. */\nexport interface TransactionOptions {\n  /**\n   * By default, events are raised each time the transaction update function\n   * runs. So if it is run multiple times, you may see intermediate states. You\n   * can set this to false to suppress these intermediate states and instead\n   * wait until the transaction has completed before events are raised.\n   */\n  readonly applyLocally?: boolean;\n}\n\n/**\n * A type for the resolve value of {@link runTransaction}.\n */\nexport class TransactionResult {\n  /** @hideconstructor */\n  constructor(\n    /** Whether the transaction was successfully committed. */\n    readonly committed: boolean,\n    /** The resulting data snapshot. */\n    readonly snapshot: DataSnapshot\n  ) {}\n\n  /** Returns a JSON-serializable representation of this object. */\n  toJSON(): object {\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n\n/**\n * Atomically modifies the data at this location.\n *\n * Atomically modify the data at this location. Unlike a normal `set()`, which\n * just overwrites the data regardless of its previous value, `runTransaction()` is\n * used to modify the existing value to a new value, ensuring there are no\n * conflicts with other clients writing to the same location at the same time.\n *\n * To accomplish this, you pass `runTransaction()` an update function which is\n * used to transform the current value into a new value. If another client\n * writes to the location before your new value is successfully written, your\n * update function will be called again with the new current value, and the\n * write will be retried. This will happen repeatedly until your write succeeds\n * without conflict or you abort the transaction by not returning a value from\n * your update function.\n *\n * Note: Modifying data with `set()` will cancel any pending transactions at\n * that location, so extreme care should be taken if mixing `set()` and\n * `runTransaction()` to update the same data.\n *\n * Note: When using transactions with Security and Firebase Rules in place, be\n * aware that a client needs `.read` access in addition to `.write` access in\n * order to perform a transaction. This is because the client-side nature of\n * transactions requires the client to read the data in order to transactionally\n * update it.\n *\n * @param ref - The location to atomically modify.\n * @param transactionUpdate - A developer-supplied function which will be passed\n * the current data stored at this location (as a JavaScript object). The\n * function should return the new value it would like written (as a JavaScript\n * object). If `undefined` is returned (i.e. you return with no arguments) the\n * transaction will be aborted and the data at this location will not be\n * modified.\n * @param options - An options object to configure transactions.\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\n * callback to handle success and failure.\n */\nexport function runTransaction(\n  ref: DatabaseReference,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  transactionUpdate: (currentData: any) => unknown,\n  options?: TransactionOptions\n): Promise<TransactionResult> {\n  ref = getModularInstance(ref);\n\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw (\n      'Reference.transaction failed: ' + ref.key + ' is a read-only object.'\n    );\n  }\n\n  const applyLocally = options?.applyLocally ?? true;\n  const deferred = new Deferred<TransactionResult>();\n\n  const promiseComplete = (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => {\n    let dataSnapshot: DataSnapshot | null = null;\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(\n        node,\n        new ReferenceImpl(ref._repo, ref._path),\n        PRIORITY_INDEX\n      );\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  };\n\n  // Add a watch to make sure we get server updates.\n  const unwatcher = onValue(ref, () => {});\n\n  repoStartTransaction(\n    ref._repo,\n    ref._path,\n    transactionUpdate,\n    promiseComplete,\n    unwatcher,\n    applyLocally\n  );\n\n  return deferred.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * Firebase Realtime Database\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Database } from './api/Database';\nimport { registerDatabase } from './register';\n\nexport * from './api';\n\nregisterDatabase();\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'database': Database;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _assertThisInitialized;\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _asyncToGenerator;\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _inherits;\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass) (0, _setPrototypeOf).default(subClass, superClass);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _setPrototypeOf;\nfunction _setPrototypeOf(o, p) {\n    return setPrototypeOf(o, p);\n}\nfunction setPrototypeOf(o1, p1) {\n    setPrototypeOf = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return setPrototypeOf(o1, p1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _typeof;\nfunction _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createSuper;\nvar _isNativeReflectConstruct = _interopRequireDefault(require(\"./_is_native_reflect_construct\"));\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nvar _possibleConstructorReturn = _interopRequireDefault(require(\"./_possible_constructor_return\"));\nfunction _createSuper(Derived) {\n    var hasNativeReflectConstruct = (0, _isNativeReflectConstruct).default();\n    return function _createSuperInternal() {\n        var Super = (0, _getPrototypeOf).default(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = (0, _getPrototypeOf).default(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return (0, _possibleConstructorReturn).default(this, result);\n    };\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _isNativeReflectConstruct;\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _getPrototypeOf;\nfunction _getPrototypeOf(o) {\n    return getPrototypeOf(o);\n}\nfunction getPrototypeOf(o1) {\n    getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return getPrototypeOf(o1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _possibleConstructorReturn;\nvar _assertThisInitialized = _interopRequireDefault(require(\"./_assert_this_initialized\"));\nvar _typeOf = _interopRequireDefault(require(\"./_type_of\"));\nfunction _possibleConstructorReturn(self, call) {\n    if (call && ((0, _typeOf).default(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    }\n    return (0, _assertThisInitialized).default(self);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\nexport function initializeApp(\n  options: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  return typeof indexedDB === 'object';\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './deferred';\n\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nexport function promiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeInMS = 2000\n): Promise<T> {\n  const deferredPromise = new Deferred<T>();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _wrapNativeSuper;\nvar _construct = _interopRequireDefault(require(\"./_construct\"));\nvar _isNativeFunction = _interopRequireDefault(require(\"./_is_native_function\"));\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _wrapNativeSuper(Class) {\n    return wrapNativeSuper(Class);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction wrapNativeSuper(Class1) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n    wrapNativeSuper = function wrapNativeSuper(Class) {\n        if (Class === null || !(0, _isNativeFunction).default(Class)) return Class;\n        if (typeof Class !== \"function\") {\n            throw new TypeError(\"Super expression must either be null or a function\");\n        }\n        if (typeof _cache !== \"undefined\") {\n            if (_cache.has(Class)) return _cache.get(Class);\n            _cache.set(Class, Wrapper);\n        }\n        function Wrapper() {\n            return (0, _construct).default(Class, arguments, (0, _getPrototypeOf).default(this).constructor);\n        }\n        Wrapper.prototype = Object.create(Class.prototype, {\n            constructor: {\n                value: Wrapper,\n                enumerable: false,\n                writable: true,\n                configurable: true\n            }\n        });\n        return (0, _setPrototypeOf).default(Wrapper, Class);\n    };\n    return wrapNativeSuper(Class1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _construct;\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _construct(Parent, args, Class) {\n    return construct.apply(null, arguments);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction construct(Parent1, args1, Class1) {\n    if (isNativeReflectConstruct()) {\n        construct = Reflect.construct;\n    } else {\n        construct = function construct(Parent, args, Class) {\n            var a = [\n                null\n            ];\n            a.push.apply(a, args);\n            var Constructor = Function.bind.apply(Parent, a);\n            var instance = new Constructor();\n            if (Class) (0, _setPrototypeOf).default(instance, Class.prototype);\n            return instance;\n        };\n    }\n    return construct.apply(null, arguments);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _isNativeFunction;\nfunction _isNativeFunction(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _objectSpread;\nvar _defineProperty = _interopRequireDefault(require(\"./_define_property\"));\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === 'function') {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            (0, _defineProperty).default(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import { registration, autentification } from './utils/authentefication';\n\nconst refs = {\n  openModalBtn: document.querySelector('[data-auth-modal-open]'),\n  closeModalBtn: document.querySelector('[data-auth-modal-close]'),\n  modal: document.querySelector('[data-auth-modal]'),\n  registerForm: document.querySelector('.register-modal'),\n  registerBtn: document.querySelector('.register-btn'),\n  authModal: document.querySelector('.authorization-modal'),\n  authForm: document.getElementById('auth-form'),\n  regForm: document.getElementById('reg-form'),\n  backToLoginBtn: document.querySelector('.login-btn'),\n  modalForm: document.querySelector('.authorization-form'),\n};\n\nrefs.openModalBtn.addEventListener('click', openModal);\nrefs.closeModalBtn.addEventListener('click', closeModal);\nrefs.registerBtn.addEventListener('click', onRegisterBtn);\nrefs.backToLoginBtn.addEventListener('click', onBackToLoginBtn);\nrefs.authForm.addEventListener('submit', autentification);\nrefs.regForm.addEventListener('submit', registration);\n\ndocument.addEventListener('keydown', e => {\n  if (e.code === 'Escape') {\n    refs.modal.classList.add('hidden');\n  }\n});\n\nexport function openModal(e) {\n  refs.modal.classList.remove('hidden');\n\n  document.body.classList.add('overflow-hidden');\n\n  document.body.style.position = 'fixed';\n  document.body.style.top = `-${window.scrollY}px`;\n}\n\nexport function closeModal(e) {\n  refs.modal.classList.add('hidden');\n  const scrollY = document.body.style.top;\n  document.body.style.position = '';\n  document.body.style.top = '';\n  window.scrollTo(0, parseInt(scrollY || '0') * -1);\n}\n\nfunction onRegisterBtn() {\n  refs.registerForm.classList.remove('hidden');\n  refs.authModal.classList.add('hidden');\n}\n\nfunction onBackToLoginBtn() {\n  refs.registerForm.classList.add('hidden');\n  refs.authModal.classList.remove('hidden');\n}\n","import { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, set, child, get } from 'firebase/database';\nimport { Film } from '../film/film';\nimport regValidation from './regValidation';\nimport exitBtnHandler from './signOutBtnHandler';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBdaR4YLCQNbvL0nBLOVIY9QfiBV8jMBN8',\n  authDomain: 'filmoteka-152c6.firebaseapp.com',\n  databaseURL:\n    'https://filmoteka-152c6-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'filmoteka-152c6',\n  storageBucket: 'filmoteka-152c6.appspot.com',\n  messagingSenderId: '913255222211',\n  appId: '1:913255222211:web:4a70b19211bfd9fa790b76',\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport function registration(evt) {\n  evt.preventDefault();\n  const userName = document.getElementById('reg-user-name');\n  const email = document.getElementById('reg-user-email');\n  const password = document.getElementById('reg-user-password');\n  if (!regValidation(userName.value, email.value, password.value)) {\n    // return Notiflix.Notify.warning('You filled form uncorrect');\n    return alert('You filled form uncorrect');\n  }\n  const db = getDatabase();\n  const dbRef = ref(db);\n\n  get(child(dbRef, 'UsersList/' + userName.value)).then(snapshot => {\n    if (snapshot.exists()) {\n      //   Notiflix.Notify.warning('User already exist !');\n      alert('User already exist !');\n    } else {\n      set(ref(db, 'UsersList/' + userName.value), {\n        userName: userName.value,\n        email: email.value,\n        password: password.value,\n      })\n        // .then(Notiflix.Notify.success('User Successfuly registraited'))\n        .then(alert('User Successfuly registraited !'))\n        .then(document.getElementById('reg-form').reset())\n        .catch(console.log);\n    }\n  });\n}\n\nexport function autentification(evt) {\n  evt.preventDefault();\n  const db = getDatabase();\n  const userName = document.getElementById('log-user-name');\n  const password = document.getElementById('log-user-password');\n  const dbRef = ref(db);\n\n  get(child(dbRef, 'UsersList/' + userName.value)).then(snapshot => {\n    if (snapshot.exists()) {\n      let dbpas = snapshot.val().password;\n      if (dbpas === password.value) {\n        alert(`You Successfuly enter in your accaunt  ${userName.value} !`);\n        // Notiflix.Notify.success(\n        //   `You Successfuly enter in your accaunt  ${userName.value} !`\n        // );\n        Film.setCurrentUserFilmList(userName.value);\n        setTimeout(() => {\n          document\n            .querySelector('.library__btn')\n            .classList.contains('active__btn')\n            ? Film.renderWatchedFilms('watchedFilms', 'просмотренных')\n            : Film.renderWatchedFilms('queueFilms', 'запланированных');\n        }, 100);\n\n        logIn(snapshot.val());\n      }\n    } else {\n      return alert('User not exist yet !');\n      //   return Notiflix.Notify.warning('User not exist yet !');\n    }\n  });\n}\n\nfunction logIn(userData) {\n  localStorage.setItem('userData', JSON.stringify(userData));\n  document.querySelector('.close-btn').click();\n\n  renderCurrentUserName();\n  addEventListenerOnExitBtn();\n}\n\nexport function renderCurrentUserName() {\n  const userNikName = JSON.parse(localStorage.getItem('userData')).userName;\n  const navUserName = document.getElementById('user-name-contain');\n\n  const html = `\n            <button\n            type=\"button\"\n            class=\"sign__out-btn\"\n            id=\"sign-out-btn\"\n          >Sign Out\n          </button>\n          <span style=\"color: white;\">Hello ,${userNikName} !</span >\n    `;\n  navUserName.innerHTML = html;\n  document.querySelector('.modal-open-btn').classList.add('hidden');\n}\n\nexport function addEventListenerOnExitBtn() {\n  const exitBtn = document.getElementById('sign-out-btn');\n  exitBtn.addEventListener('click', exitBtnHandler);\n}\n","export default function regValidation(name, email, pas) {\n  let nameVal = /[a-zA-Z\\s]+/;\n  let emailVal = /[a-zA-Z0-9]+@(gmail|yahoo|mail)\\.com/;\n  let pasVal = /[a-zA-Z0-9]{5,}/;\n\n  if (nameVal.test(name) && emailVal.test(email) && pasVal.test(pas)) {\n    return true;\n  }\n  console.log(name);\n  console.log(email);\n  console.log(pas);\n  return false;\n}\n","import { Film } from '../film/film';\n\nexport default function exitBtnHandler() {\n  localStorage.removeItem('userData');\n  localStorage.removeItem('watchedFilms');\n  localStorage.removeItem('queueFilms');\n  document.querySelector('.library__btn').classList.contains('active__btn')\n    ? Film.renderWatchedFilms('watchedFilms', 'просмотренных')\n    : Film.renderWatchedFilms('queueFilms', 'запланированных');\n\n  document.querySelector('.modal-open-btn').classList.remove('hidden');\n  document.getElementById('user-name-contain').innerHTML = '';\n}\n","import axios from 'axios';\nimport API_KEY from './apiKey';\nimport getMovieDetails from './fetches/getMovieDetails';\nimport { actionWatch, actionQueue } from './utils/modalBtnAction';\nimport { Film } from './film/film';\n\nimport '../sass/components/_modal-form.scss';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const refs = {\n    openModal: document.querySelector('[data-modal-open]'),\n    closeModal: document.querySelector('[data-modal-close]'),\n    modal: document.querySelector('[data-modal]'),\n    form: document.querySelector('.form'),\n    card: document.querySelector('.list'),\n    body: document.querySelector('body'),\n  };\n\n\n\n  function getCurrentGenres(genreList) {\n    return genreList\n      .map(singleGenre => {\n        return singleGenre.name;\n      })\n      .join(', ');\n  }\n\n  // refs.card.addEventListener('click', modalForm);\n\n  const openModal = () => {\n    document\n      .getElementById('modal_form')\n      .closest('.modal_overlay')\n      .classList.add('active');\n  };\n\n  const closeModal = (e = false) => {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    document\n      .getElementById('modal_form')\n      .closest('.modal_overlay')\n      .classList.remove('active');\n  };\n\n  const modalForm = e => {\n    if (!e.target.closest('.card__film .thumb')) {\n      return false;\n    }\n    const currentCardId = e.target.closest('.thumb').dataset.id;\n    getMovieDetails(API_KEY, currentCardId).then(data => {\n      const {\n        genres,\n        title,\n        vote_average,\n        vote_count,\n        poster_path,\n        popularity,\n        original_title,\n        overview,\n      } = data;\n      const img =\n    'https://raw.githubusercontent.com/GrooT921/team-project-filmoteka/main/src/images/no-images-found.png';\n      const form_html = `\n        <form class=\"form\">\n        <div class=\"form__film-card\">\n        <div class=\"form__film-img\">\n            <img class=\"form-img\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\"\n            onerror='this.src=\"${img}\"'/>\n        </div>\n        </div>\n        <div class=\"form__info\">\n        <h2 class=\"form__title\">${title}</h2>\n        <ul class=\"form__info-list\">\n            <li class=\"form__info-item\">\n                <p class=\"form__info-name\">Vote / Votes</p>\n                <p class=\"form__info-details\"> <span class=\"film__rating\">${vote_average.toFixed(1)}</span> / ${vote_count}</p>\n            </li>\n            <li class=\"form__info-item\">\n                <p class=\"form__info-name\">Popularity</p>\n                <p class=\"form__info-details\">${popularity}</p>\n            </li>\n            <li class=\"form__info-item\">\n                <p class=\"form__info-name\">Original Title</p>\n                <p class=\"form__info-details details-title\">${original_title}</p>\n            </li>\n            <li class=\"form__info-item\">\n                <p class=\"form__info-name\">Genre</p>\n                <p class=\"form__info-details\">${getCurrentGenres(genres)}</p>\n            </li>\n        </ul>\n        <div class=\"form__about\">\n        <h3 class=\"form__about-name\">About</h3>\n        <p class=\"form__about-details\">${overview}</p>\n        </div>\n        <div class=\"form__btn-list\">\n            <button data-action=${\n              Film.isFilmExistInWatched(data.id)[0]\n            } id=\"watched\" class=\"form-button form-add-btn\" type=\"button\">${\n        Film.isFilmExistInWatched(data.id)[1]\n      }</button>\n            <button data-action=${\n              Film.isFilmExistInQueue(data.id)[0]\n            } id=\"queue\" class=\"form-button form-queue-btn\" type=\"button\">${\n        Film.isFilmExistInQueue(data.id)[1]\n      }</button>\n        </div>\n        </div>\n        </form>\n        `;\n\n      const modalFormElement = document.getElementById('modal_form');\n\n      modalFormElement.innerHTML = form_html;\n      document.getElementById('watched').addEventListener('click', event => {\n        actionWatch(event, data);\n      });\n      document.getElementById('queue').addEventListener('click', event => {\n        actionQueue(event, data);\n      });\n      openModal();\n      disableScroll ();\n      \n    });\n  };\n  \n\n  document.addEventListener('click', modalForm);\n\n  // document.getElementById('btn-close').addEventListener('click', closeModal);\n\n  document.getElementById('btn-close').addEventListener('click', () => {\n    closeModal();\n    scroll ()\n  });\n\n  document.addEventListener('click', e => {\n    if (e.target.classList.contains('modal_overlay')) {\n      closeModal();\n      scroll ()\n    }\n  })\n\n  document.getElementById('btn-close').addEventListener('click', () => {\n    closeModal();\n    // document.querySelector('.library__btn').classList.contains('active__btn')\n    //   ? Film.renderWatchedFilms('watchedFilms', 'просмотренных')\n    //   : Film.renderWatchedFilms('queueFilms', 'запланированных');\n  });\n  document.addEventListener('click', e => {\n    if (e.target.classList.contains('modal_overlay')) {\n      closeModal();\n      // document.querySelector('.library__btn').classList.contains('active__btn')\n      //   ? Film.renderWatchedFilms('watchedFilms', 'просмотренных')\n      //   : Film.renderWatchedFilms('queueFilms', 'запланированных');\n\n    }\n  });\n\n  document.addEventListener('keydown', e => {\n    if (e.code === 'Escape') {\n      closeModal();\n      scroll ()\n\n      // document.querySelector('.library__btn').classList.contains('active__btn')\n      //   ? Film.renderWatchedFilms('watchedFilms', 'просмотренных')\n      //   : Film.renderWatchedFilms('queueFilms', 'запланированных');\n\n    }\n  });\n\n  function disableScroll (){\n  // refs.body.classList.add('disable-scroll')\n  document.body.style.position = 'fixed';\ndocument.body.style.width = '100%';\n  }\n\n  function scroll (){\n    // refs.body.classList.add('disable-scroll')\n    document.body.style.position = '';\n    document.body.style.top = '';\n    }\n});\n\n\n\n// if(false){\n\n// function modalForm (e) {\n//   if(e.target.nodeName !==  \"IMG\") {\n//     return\n//   }\n//   const currentCard = e.target.parentNode;\n//   const currentCardId = currentCard.dataset.id;\n//   getMovieDetails(API_KEY, currentCardId)\n//   .then(({\n//   genres,\n//   title,\n//   vote_average,\n//   vote_count,\n//   poster_path,\n//   popularity,\n//   original_title,\n//   overview,\n// }) => {\n\n//     const form_html = `\n//     <form class=\"form\">\n//         <div class=\"form__film-card\">\n//             <div class=\"form__film-img\">\n//                 <img src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"${title}\" width=375px height=478px>\n//             </div>\n//         </div>\n//         <div class=\"form__info\">\n//             <h2 class=\"form__title\">${title}</h2>\n//             <ul>\n//                 <li class=\"form__info-item\">\n//                     <p class=\"form__info-name\">Vote / Votes</p>\n//                     <p class=\"form__info-details\">${vote_average} / ${vote_count}</p>\n//                 </li>\n//                 <li class=\"form__info-item\">\n//                     <p class=\"form__info-name\">Popularity</p>\n//                     <p class=\"form__info-details\">${popularity}</p>\n//                 </li>\n//                 <li class=\"form__info-item\">\n//                     <p class=\"form__info-name\">Original Title</p>\n//                     <p class=\"form__info-details\">${original_title}</p>\n//                 </li>\n//                 <li class=\"form__info-item\">\n//                     <p class=\"form__info-name\">Genre</p>\n//                     <p class=\"form__info-details\">${getCurrentGenres (genres)}</p>\n//                 </li>\n//             </ul>\n//             <h3 class=\"form__about-name\">About</h3>\n//             <p class=\"form__about-name\">${overview}</p>\n//             <div class=\"form__btn-list\">\n//                 <button class=\"form-button\" type=\"submit\">Add to watched</button>\n//                 <button class=\"form-button\" type=\"submit\">Add to queue</button>\n//             </div>\n//         </div>\n//     </form>\n//     `;\n\n//     const modalFormElement = document.getElementById('modal_form');\n\n//     modalFormElement.innerHTML = form_html;\n\n//     modalFormElement.closest('.modal_overlay').classList.toggle('active');\n\n// console.log(getCurrentGenres (genres));\n// console.log(genres[0].name)\n//     const instance = basicLightbox.create(`\n//    <div class=\"modal\">\n\n// </div>\n// `, {\n//     onShow: (instance) => {\n//       function onInstanceclick(e) {\n//         if (e.code === 'Escape') {\n//           instance.close();\n//         }\n//       }\n//       document.addEventListener('keydown', onInstanceclick);\n//       instance.element().querySelector('.btn-close').onclick = instance.close;\n//     },\n//     onClose: instance => {\n//       function onInstanceclick(e) {\n//         if (e.code === 'Escape') {\n//           instance.close();\n//         }\n//       }\n//       document.removeEventListener('keydown', onInstanceclick);\n//     },\n\n// })\n// instance.show()\n//   })\n//   }\n\n//   function getCurrentGenres(genreList) {\n//    return  genreList.map ((singleGenre) => {\n// return singleGenre.name\n//     }\n//     ).join( \", \")\n\n// });\n\n// function modalForm () {\n//   getMovieDetails(API_KEY)\n//       .then(data => {\n//         const {\n//           genres,\n//           title,\n//           vote_average,\n//           vote_count,\n//           poster_path,\n//           // backdrop_path,\n//           popularity,\n//           original_title,\n//           overview,\n//         } = data;\n\n//         const instance = basicLightbox.create(`\n//         <div class=\"modal\">\n//         <button type=\"button\" class=\"btn-close\">\n//         <svg width=\"30\" height=\"30\"></svg>\n//         </button>\n//         <form class=\"form\">\n//         <div class=\"form__film-card\">\n//         <div class=\"form__film-img\">\n//             <img src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"${title}\" width=375px height=478px>\n//         </div>\n//         <div class=\"form__info\">\n//         <h3 class=\"form__title\">Name of film <b>${title}</b></h3>\n//             <p class=\"form__info-item\"><span>Popularity <b>${popularity}</b></span></p>\n//             <p class=\"form__info-item\"><span>Original Title <b>${original_title}</b></span></p>\n//             <p class=\"form__info-item\"><span>Genre</span> <b>${genres}</b></p>\n//             <p class=\"form__info-item\"><span>Vote / Votes <b>${vote_average}</b> / <b>${vote_count}</b></span></p>\n//             <p class=\"form__info-about\"><span>About <b>${overview}</b></span></p>\n//             <div class=\"form__btn-list\">\n//                 <button class=\"form-button\" type=\"submit\">Add to watched</button>\n//                 <button class=\"form-button\" type=\"submit\">Add to queue</button>\n//             </div>\n//         </div>\n//         </div>\n//         </form>\n//     </div>\n//     `, {\n//         onShow: (instance) => {\n//           function onInstanceclick(e) {\n//             if (e.code === 'Escape') {\n//               instance.close();\n//             }\n//           }\n//           document.addEventListener('keydown', onInstanceclick);\n//           instance.element().querySelector('.btn-close').onclick = instance.close;\n//         },\n//         onClose: instance => {\n//           function onInstanceclick(e) {\n//             if (e.code === 'Escape') {\n//               instance.close();\n//             }\n//           }\n//           document.removeEventListener('keydown', onInstanceclick);\n//         },\n\n//     })\n//     instance.show()\n//       })\n//       .catch(error => {\n//       });\n//     }\n\n// document.onclick = function(event) {\n//   if(event.target === refs.modal) {\n//     refs.modal.classList.add(\"is-hidden\");\n//   }\n// }\n\n//     const instance = basicLightbox.create(`\n//     <div class=\"modal\">\n//     <img src=\"\"  width=375 height=478/>\n//     <div class=\"form__info\">\n//         <h3 class=\"form__title\">Name of film <b></b></h3>\n//         <p class=\"form__info-item\"><span>Popularity <b>}</b></span></p>\n//         <p class=\"form__info-item\"><span>Original Title <b></b></span></p>\n//         <p class=\"form__info-item\"><span>Genre</span> <b></b></p>\n//         <p class=\"form__info-item\"><span>Vote / Votes <b></b> / <b></b></span></p>\n//         <p class=\"form__info-about\"><span>About <b></b></span></p>\n//         <div class=\"form__btn-list\">\n//             <button class=\"form-button\" type=\"submit\">Add to watched</button>\n//             <button class=\"form-button\" type=\"submit\">Add to queue</button>\n//         </div>\n//     </div>\n//         <input placeholder=\"Type something\">\n//         <a>Close</a>\n//     </div>\n// `, {\n//     onShow: (instance) => {\n//         instance.element().querySelector('a').onclick = instance.close\n//     }\n// })\n\n// instance.show()\n\n// return `\n// <div class=\"form__film-card\">\n//           <img src=\"\"  width=375 height=478/>\n//           <div class=\"form__info\">\n//               <h3 class=\"form__title\">Name of film <b></b></h3>\n//               <p class=\"form__info-item\"><span>Popularity <b>}</b></span></p>\n//               <p class=\"form__info-item\"><span>Original Title <b></b></span></p>\n//               <p class=\"form__info-item\"><span>Genre</span> <b></b></p>\n//               <p class=\"form__info-item\"><span>Vote / Votes <b></b> / <b></b></span></p>\n//               <p class=\"form__info-about\"><span>About <b></b></span></p>\n//               <div class=\"form__btn-list\">\n//                   <button class=\"form-button\" type=\"submit\">Add to watched</button>\n//                   <button class=\"form-button\" type=\"submit\">Add to queue</button>\n//               </div>\n//           </div>\n//       </div>\n// `\n\n// function buildModal (movies) {\n//   const markup = movies.map(({backdrop_path, title, original_title, vote_average, vote_count, popularity, overview,\n//     genres\n// }) => {\n//       return `\n//       <div class=\"form__film-card\">\n//                 <img src=\"${backdrop_path}\"  width=375 height=478/>\n//                 <div class=\"form__info\">\n//                     <h3 class=\"form__title\">Name of film <b>${title}</b></h3>\n//                     <p class=\"form__info-item\"><span>Popularity <b>${popularity}</b></span></p>\n//                     <p class=\"form__info-item\"><span>Original Title <b>${original_title}</b></span></p>\n//                     <p class=\"form__info-item\"><span>Genre</span> <b>${genres}</b></p>\n//                     <p class=\"form__info-item\"><span>Vote / Votes <b>${vote_average}</b> / <b>${vote_count}</b></span></p>\n//                     <p class=\"form__info-about\"><span>About <b>${overview}</b></span></p>\n//                     <div class=\"form__btn-list\">\n//                         <button class=\"form-button\" type=\"submit\">Add to watched</button>\n//                         <button class=\"form-button\" type=\"submit\">Add to queue</button>\n//                     </div>\n//                 </div>\n//             </div>\n//       `\n//     })\n//     .join('');\n//     refs.film.insertAdjacentHTML('beforeend', markup);\n// }\n\n// function buildModal (movie) {\n//   refs.film.innerHTML = movie.map(({backdrop_path, title, original_title, vote_average, vote_count, popularity, overview\n//         }) => {\n//               return `\n//               <div class=\"form__film-card\">\n//                         <img src=\"${backdrop_path}\"  width=375 height=478/>\n//                         <div class=\"form__info\">\n//                             <h3 class=\"form__title\">Name of film <b>${title}</b></h3>\n//                             <p class=\"form__info-item\"><span>Popularity <b>${popularity}</b></span></p>\n//                             <p class=\"form__info-item\"><span>Original Title <b>${original_title}</b></span></p>\n\n//                             <p class=\"form__info-item\"><span>Vote / Votes <b>${vote_average}</b> / <b>${vote_count}</b></span></p>\n//                             <p class=\"form__info-about\"><span>About <b>${overview}</b></span></p>\n//                             <div class=\"form__btn-list\">\n//                                 <button class=\"form-button\" type=\"submit\">Add to watched</button>\n//                                 <button class=\"form-button\" type=\"submit\">Add to queue</button>\n//                             </div>\n//                         </div>\n//                     </div>\n//               `\n//             })\n//       .join('');\n// };\n\n//   // refs.openModal.addEventListener(\"click\", openModal);\n// refs.closeModal.addEventListener(\"click\", closeModal);\n// // function openModal() {\n// //   refs.modal.classList.remove(\"is-hidden\");\n// // }\n// function closeModal() {\n//   refs.modal.classList.add(\"is-hidden\");\n// }\n// document.onclick = function(event) {\n//   if(event.target === refs.modal) {\n//     refs.modal.classList.add(\"is-hidden\");\n//   }\n// }\n// document.addEventListener(\"keydown\", function() {\n//   refs.modal.classList.add('is-hidden');\n// });\n\n// WORK\n// refs.openModal.addEventListener(\"click\", openModal);\n// refs.closeModal.addEventListener(\"click\", closeModal);\n// function openModal() {\n//   refs.modal.classList.remove(\"is-hidden\");\n// }\n// function closeModal() {\n//   refs.modal.classList.add(\"is-hidden\");\n// }\n// document.onclick = function(event) {\n//   if(event.target === refs.modal) {\n//     refs.modal.classList.add(\"is-hidden\");\n//   }\n// }\n// document.addEventListener(\"keydown\", function() {\n//   refs.modal.classList.add('is-hidden');\n// });\n\n// function modalForm () {\n//   getMovieDetails(API_KEY)\n//       .then(data => {\n//         refs.modal.classList.remove(\"is-hidden\");\n//         const markup = data.map(({backdrop_path, title, original_title, vote_average, vote_count, popularity, overview,\n//           genres\n//       }) => {\n//             return `\n//             <div class=\"form__film-card\">\n//                       <img src=\"${backdrop_path}\"  width=375 height=478/>\n//                       <div class=\"form__info\">\n//                           <h3 class=\"form__title\">Name of film <b>${title}</b></h3>\n//                           <p class=\"form__info-item\"><span>Popularity <b>${popularity}</b></span></p>\n//                           <p class=\"form__info-item\"><span>Original Title <b>${original_title}</b></span></p>\n//                           <p class=\"form__info-item\"><span>Genre</span> <b>${genres}</b></p>\n//                           <p class=\"form__info-item\"><span>Vote / Votes <b>${vote_average}</b> / <b>${vote_count}</b></span></p>\n//                           <p class=\"form__info-about\"><span>About <b>${overview}</b></span></p>\n//                           <div class=\"form__btn-list\">\n//                               <button class=\"form-button\" type=\"submit\">Add to watched</button>\n//                               <button class=\"form-button\" type=\"submit\">Add to queue</button>\n//                           </div>\n//                       </div>\n//                   </div>\n//             `\n//           })\n//           .join('');\n//           refs.form.insertAdjacentHTML('beforeend', markup);\n//       // console.log(data)\n//       })\n//       .catch(error => {\n//       });\n//     }\n\n// Work\n// function modalForm () {\n//   getMovieDetails(API_KEY)\n//       .then(data => {\n//         const instance = basicLightbox.create(`\n//         <div class=\"modal\">\n//         <button type=\"button\" class=\"btn-close\">\n//         <svg width=\"30\" height=\"30\"></svg>\n//         </button>\n//         <img src=\"\"  width=375 height=478/>\n//         <div class=\"form__info\">\n//             <h3 class=\"form__title\">Name of film <b></b></h3>\n//             <p class=\"form__info-item\"><span>Popularity <b>}</b></span></p>\n//             <p class=\"form__info-item\"><span>Original Title <b></b></span></p>\n//             <p class=\"form__info-item\"><span>Genre</span> <b></b></p>\n//             <p class=\"form__info-item\"><span>Vote / Votes <b></b> / <b></b></span></p>\n//             <p class=\"form__info-about\"><span>About <b></b></span></p>\n//             <div class=\"form__btn-list\">\n//                 <button class=\"form-button\" type=\"submit\">Add to watched</button>\n//                 <button class=\"form-button\" type=\"submit\">Add to queue</button>\n//             </div>\n//     `, {\n//         onShow: (instance) => {\n//           function onInstanceclick(e) {\n//             if (e.code === 'Escape') {\n//               instance.close();\n//             }\n//           }\n//           document.addEventListener('keydown', onInstanceclick);\n//           instance.element().querySelector('.btn-close').onclick = instance.close;\n//         },\n//         onClose: instance => {\n//           function onInstanceclick(e) {\n//             if (e.code === 'Escape') {\n//               instance.close();\n//             }\n//           }\n//           document.removeEventListener('keydown', onInstanceclick);\n//         },\n\n//     })\n//     instance.show()\n//       })\n//       .catch(error => {\n//       });\n//     }\n\n// }\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = require('./cancel/CanceledError');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\naxios.toFormData = require('./helpers/toFormData');\n\n// Expose AxiosError class\naxios.AxiosError = require('../lib/core/AxiosError');\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function} [filter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if (!merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object\n * @param {*} [thing]\n * @returns {Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  var i = thing.length;\n  if (isUndefined(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList\n};\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar buildFullPath = require('./buildFullPath');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  var fullPath = buildFullPath(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method: method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url: url,\n        data: data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar CanceledError = require('../cancel/CanceledError');\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar AxiosError = require('../core/AxiosError');\nvar transitionalDefaults = require('./transitional');\nvar toFormData = require('../helpers/toFormData');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    var isObjectPayload = utils.isObject(data);\n    var contentType = headers && headers['Content-Type'];\n\n    var isFileList;\n\n    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {\n      var _FormData = this.env && this.env.FormData;\n      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());\n    } else if (isObjectPayload || contentType === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: require('./env/FormData')\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nvar prototype = AxiosError.prototype;\nvar descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED'\n// eslint-disable-next-line func-names\n].forEach(function(code) {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = function(error, code, config, request, response, customProps) {\n  var axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nmodule.exports = AxiosError;\n","'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Convert a data object to FormData\n * @param {Object} obj\n * @param {?Object} [formData]\n * @returns {Object}\n **/\n\nfunction toFormData(obj, formData) {\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new FormData();\n\n  var stack = [];\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  function build(data, parentKey) {\n    if (utils.isPlainObject(data) || utils.isArray(data)) {\n      if (stack.indexOf(data) !== -1) {\n        throw Error('Circular reference detected in ' + parentKey);\n      }\n\n      stack.push(data);\n\n      utils.forEach(data, function each(value, key) {\n        if (utils.isUndefined(value)) return;\n        var fullKey = parentKey ? parentKey + '.' + key : key;\n        var arr;\n\n        if (value && !parentKey && typeof value === 'object') {\n          if (utils.endsWith(key, '{}')) {\n            // eslint-disable-next-line no-param-reassign\n            value = JSON.stringify(value);\n          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {\n            // eslint-disable-next-line func-names\n            arr.forEach(function(el) {\n              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));\n            });\n            return;\n          }\n        }\n\n        build(value, fullKey);\n      });\n\n      stack.pop();\n    } else {\n      formData.append(parentKey, convertValue(data));\n    }\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nmodule.exports = toFormData;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\nvar parseProtocol = require('../helpers/parseProtocol');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar AxiosError = require('./AxiosError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n","'use strict';\n\nmodule.exports = function parseProtocol(url) {\n  var match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n};\n","// eslint-disable-next-line strict\nmodule.exports = null;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'beforeRedirect': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar VERSION = require('../env/data').version;\nvar AxiosError = require('../core/AxiosError');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","module.exports = {\n  \"version\": \"0.27.2\"\n};","'use strict';\n\nvar CanceledError = require('./CanceledError');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new CanceledError(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n","const API_KEY = '9c3613c3b537f8ef5b027465b16a3a8b';\nexport default API_KEY;\n","import axios from 'axios';\n\n// async function getMovieDetails(api_key) {\n//   try {\n//     const response = await axios.get(\n//         `https://api.themoviedb.org/3/movie/157386?api_key=${api_key}`\n//     );\n\n//     return response.data;\n//   } catch (error) {\n//     console.error(error);\n//   }\n// }\n// export default getMovieDetails;\n\n\n\nasync function getMovieDetails(api_key, movie_id) {\n  try {\n    const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${api_key}`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport default getMovieDetails;\n\n\n  \n// async function getModalForm(api_key, movie_id) {\n//     try {\n//         const movie = await axios.get(\n//             `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${api_key}`;\n//           const response = await movie.data;\n//           return response;\n//       } catch (error) {\n//         if (error.response) {\n//           throw new Error(error.response.status);\n//         }\n//       }\n//   }\n\n\n// 157336\n// 157386","import { Film } from '../film/film';\n\nexport function actionWatch(evt, filmData) {\n  //   console.log(evt.target.dataset.action);\n  if (evt.target.dataset.action === 'add') {\n    if (localStorage.getItem('userData') !== null) {\n      const currentUserName = JSON.parse(\n        localStorage.getItem('userData')\n      ).userName;\n      Film.createWithtAuth(filmData, 'watchedFilms', currentUserName);\n      evt.target.textContent = 'Remove from watched';\n      evt.target.dataset.action = 'remove';\n    } else {\n      Film.createWithoutAuth(filmData, 'watchedFilms');\n      evt.target.textContent = 'Remove from watched';\n      evt.target.dataset.action = 'remove';\n    }\n  } else {\n    if (localStorage.getItem('userData') !== null) {\n      const currentUserName = JSON.parse(\n        localStorage.getItem('userData')\n      ).userName;\n      Film.removeWithAuth(filmData.id, 'watchedFilms', currentUserName);\n      Film.renderWatchedFilms('watchedFilms', 'просмотренных');\n\n      evt.target.textContent = 'Add to queue';\n      evt.target.dataset.action = 'add';\n    } else {\n      Film.removeWithoutAuth(filmData.id, 'watchedFilms');\n      Film.renderWatchedFilms('watchedFilms', 'просмотренных');\n      evt.target.textContent = 'Add to watched';\n      evt.target.dataset.action = 'add';\n    }\n  }\n}\n\nexport function actionQueue(evt, filmData) {\n  if (evt.target.dataset.action === 'add') {\n    if (localStorage.getItem('userData') !== null) {\n      const currentUserName = JSON.parse(\n        localStorage.getItem('userData')\n      ).userName;\n      Film.createWithtAuth(filmData, 'queueFilms', currentUserName);\n      evt.target.textContent = 'Remove from queue';\n      evt.target.dataset.action = 'remove';\n    } else {\n      Film.createWithoutAuth(filmData, 'queueFilms');\n      evt.target.textContent = 'Remove from queue';\n      evt.target.dataset.action = 'remove';\n    }\n  } else {\n    if (localStorage.getItem('userData') !== null) {\n      const currentUserName = JSON.parse(\n        localStorage.getItem('userData')\n      ).userName;\n      Film.removeWithAuth(filmData.id, 'queueFilms', currentUserName);\n      Film.renderWatchedFilms('queueFilms', 'запланированных');\n      evt.target.textContent = 'Add to queue';\n      evt.target.dataset.action = 'add';\n    } else {\n      Film.removeWithoutAuth(filmData.id, 'queueFilms');\n      Film.renderWatchedFilms('queueFilms', 'запланированных');\n      evt.target.textContent = 'Add to queue';\n      evt.target.dataset.action = 'add';\n    }\n  }\n}\n","function scrollToTop() {\n  const scrollUp = document.getElementById('scroll-to-top');\n  // When the user scrolls down from the top of the document, show the scrollUp\n  // Коли користувач прокрутив вниз, з'являється кнопка повернутись вверх\n  window.onscroll = function () {\n    scrollFunction();\n  };\n\n  function scrollFunction() {\n    if (\n      document.body.scrollTop > 20 ||\n      document.documentElement.scrollTop > 20\n    ) {\n      scrollUp.style.display = 'block';\n    } else {\n      scrollUp.style.display = 'none';\n    }\n  }\n\n  // When the user clicks on the scrollUp, scroll to the top of the document\n  // Коли користувач клікає на кнопку, сторінка скролиться вверх\n  scrollUp.addEventListener('click', topFunction);\n}\nexport function topFunction() {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }\nexport default scrollToTop;\n\n"],"names":["$8MBJY","parcelRequire","$fd349f9ff6806cab$export$d5ceef4e30af8800","Film","key","newFilm","folder","all","$fd349f9ff6806cab$var$getFilmsFromLocalStorage","push","localStorage","setItem","concat","JSON","stringify","filmId","index","$fd349f9ff6806cab$var$findFilmById","filmsList","splice","userName","db","$eA2L7","getDatabase","removeWithoutAuth","remove","ref","createWithoutAuth","set","id","release_date","genres","poster_path","title","vote_average","catch","console","log","rewWords","films","length","list","map","$fd349f9ff6806cab$var$createOneFilmCard","join","document","querySelector","innerHTML","dbRef","get","child","then","snapshot","exists","$fd349f9ff6806cab$var$dbDataHandler","val","parse","getItem","findIndex","film","year","Date","getFullYear","genresName","singleGenre","name","genresNameDotted","slice","toFixed","data","element","Object","defineProperty","module","exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","protoProps","staticProps","prototype","$a9d69158b154a93b$var$SDK_VERSION","$parcel$interopDefault","this","DOMStorageWrapper","domStorage_","prefix_","$a2hTj","removeItem","prefixedName_","$2xDiJ","storedVal","toString","$a9d69158b154a93b$var$MemoryStorage","MemoryStorage","cache_","isInMemoryStorage","contains","$a9d69158b154a93b$var$createStoragefor","domStorageName","window","domStorage","$a9d69158b154a93b$var$DOMStorageWrapper","e","$a9d69158b154a93b$var$PersistentStorage","$a9d69158b154a93b$var$SessionStorage","$kZfxc","Logger","stringToByteArray","str","sha11","digest","base64","encodeByteArray","sha1Bytes","_key","arguments","arg","varArgs","Array","isArray","message","$a9d69158b154a93b$var$buildLogMessage_","apply","$a9d69158b154a93b$var$logger","$a9d69158b154a93b$var$enableLogging$1","logger_","persistent","assert","$a9d69158b154a93b$var$logClient","logLevel","LogLevel","VERBOSE","bind","$a9d69158b154a93b$var$log","$a9d69158b154a93b$var$firstLog_","$a9d69158b154a93b$var$logWrapper","prefix","_len","$8nrFW","$a9d69158b154a93b$var$error","error","$a9d69158b154a93b$var$fatal","Error","warn","$a9d69158b154a93b$var$isInvalidJSONNumber","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","$a9d69158b154a93b$var$MIN_NAME","$a9d69158b154a93b$var$MAX_NAME","$a9d69158b154a93b$var$nameCompare","a","b","bAsInt","$a9d69158b154a93b$var$stringCompare","obj","$a9d69158b154a93b$var$ObjectToUniqueKey","keys","k","sort","segsize","substring","c","fn","hasOwnProperty","v","f","ln","Infinity","Math","pow","bias","round","floor","hexByte","toLowerCase","RegExp","test","time","setTimeout","timeout","Deno","unrefTimer","AppCheckTokenProvider","appName_","appCheckProvider","getImmediate","_this","appCheck","getToken","forceRefresh","Promise","resolve","reject","_this1","listener","_a","addTokenListener","$a9d69158b154a93b$var$warn","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","optional","onInit","auth","_this2","addAuthTokenListener","removeAuthTokenListener","errorMessage","$a9d69158b154a93b$var$EmulatorTokenProvider","EmulatorTokenProvider","accessToken","namespace","webSocketOnly","persistenceKey","includeNamespaceInQueryParams","RepoInfo","nodeAdmin","host","_host","substr","indexOf","internalHost","_domain","newHost","isCacheableHost","protocol","secure","query2","repoInfo","type","params","connURL","$a9d69158b154a93b$var$LONG_POLLING","isCustomHost","pairs","StatsCollection","name2","amount","counters_","hashString","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","responseNum","callback","onClose","requestNum","_loop","toProcess","$a9d69158b154a93b$var$exceptionGuard","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","BrowserPollConnection","bytesSent","$a9d69158b154a93b$var$statsManagerGetCollection","_this4","curSegmentNum","onDisconnect_","onDisconnect1","myPacketOrderer","$a9d69158b154a93b$var$PacketReceiver","onMessage","isClosed_","onClosed_","isNodeSdk","readyState","called","wrappedFn","addEventListener","attachEvent","_this3","args","_args","$1t1Wn","command","arg1","arg2","incrementIncomingBytes_","scriptTagHolder","connectTimeoutTimer_","everConnected_","$a9d69158b154a93b$var$FIREBASE_LONGPOLL_START_PARAM","password","sendNewPolls","closeAfter","handleResponse","pN","urlParams","random","$a9d69158b154a93b$var$PROTOCOL_VERSION","connectURL","urlFn","log_","addTag","startLongPoll","addDisconnectPingFrame","myDisconnFrame","body","removeChild","clearTimeout","shutdown_","dataStr","stats_","incrementCounter","base64data","base64Encode","dataSegs","$a9d69158b154a93b$var$splitStringBySize","$a9d69158b154a93b$var$MAX_URL_DATA_SIZE","enqueueSegment","pw","createElement","src","style","display","bytesReceived","forceAllow_","forceDisallow_","location","href","FirebaseIFrameScriptHolder","commandCB","onMessageCB","onDisconnect2","Set","currentSerial","uniqueCallbackIdentifier","myIFrame","createIFrame_","script","domain","iframeContents","doc","open","write","close","stack","alive","onDisconnect3","onDisconnect","myPW","newRequest_","outstandingRequests","size","pendingSegs","theURL","d","curDataString","theSeg","shift","seg","ts","addLongPollTag_","segnum","url","serial","add","delete","doNewRequest","keepaliveTimeout","loadCB","_this5","newScript","onload","onreadystatechange","rstate","parentNode","onerror","appendChild","iframe","contentWindow","contentDocument","$a9d69158b154a93b$var$WebSocketImpl","MozWebSocket","WebSocket","connectionURL_","WebSocketConnection","onDisconnect4","device","options","headers","$6qd2L","platform","proxy","env","origin","mySock","e1","onopen","onclose","handleIncomingFrame","m","frames","totalFrames","fullMess","jsonMess","jsonEval","frameCount","isNaN","handleNewFrameCount_","mess","appendFrame_","remainingData","extractFrameCount_","resetKeepAlive","sendString_","String","keepaliveTimer","setInterval","hostname","$a9d69158b154a93b$var$FORGE_DOMAIN_RE","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","isWebSocketsAvailable","$a9d69158b154a93b$var$WebSocketConnection","isSkipPollConnection","previouslyFailed","_step","_iterator","ALL_TRANSPORTS","Symbol","iterator","_iteratorNormalCompletion","next","done","transport","transports","_iteratorError","err","return","_didIteratorError","transports_","globalTransportInitialized_","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","pendingDataMessages","$a9d69158b154a93b$var$TransportManager","conn","transportManager_","initialTransport","conn_","nextTransportId_","onConnectionLost","disconnReceiver_","tx_","healthyTimeout_","isHealthy_","markConnectionHealthy","healthyTimeoutMS","connectionCount","onConnectionLost_","everConnected","secondaryConn_","onSecondaryConnectionLost_","rx_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","msg","t","sendData_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","$a9d69158b154a93b$var$requireKey","onSecondaryControl_","proceedWithUpgrade_","send","start","tryCleanupConnection","onDataMessage_","onPrimaryResponse_","primaryResponsesRequired_","onConnectionShutdown_","payload","sendPingOnPrimaryIfNecessary_","sessionId","handshake","s","state_","onConnectionEstablished_","timestamp","version2","upgradeTransport","startUpgrade_","onDisconnect5","$a9d69158b154a93b$var$setTimeoutNonBlocking","closeConnections_","start_","reason","ServerActions","pathString","onComplete","stats","allowedEvents_","EventEmitter","eventType","listeners_","listeners","context","validateEventType_","eventData","getInitialEvent","find","et","$eYQtU","OnlineMonitor","$2MbLg","_super","call","online_","isMobileCordova","trigger","pathOrString","pieceNum","split","pieces_","copyTo","pieceNum_","Path","path","begin","pieces","childPathObj","$a9d69158b154a93b$var$Path","i1","$a9d69158b154a93b$var$newRelativePath","outerPath","innerPath","outer","inner","$a9d69158b154a93b$var$pathPopFront","other","$a9d69158b154a93b$var$pathGetLength","j","ValidationPath","errorPrefix_","byteLength_","max","parts_","stringLength","validationPath","$a9d69158b154a93b$var$validationPathToErrorString","VisibilityMonitor","visibilityChange","hidden","visible_","visible","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","Map","$a9d69158b154a93b$var$RECONNECT_MIN_DELAY","realtime_","$a9d69158b154a93b$var$OnlineMonitor","getInstance","on","onOnline_","$ds8z5","action","onResponse","curReqNum","requestNumber_","connected_","requestCBHash_","initConnection_","Deferred","_path","query4","currentHashFn","tag","queryId","listens","has","listenSpec","sendListen_","get1","outstandingGets_","sendRequest","request","outstandingGetCount_","query5","_queryIdentifier","req","p","_queryObject","hashFn","status","warnOnListenWarnings_","token","reduceReconnectDelayIfAdminCredential_","credential","tryAppCheck","authMethod","isValidFormat","requestData","onAuthRevoked_","res","invalidAppCheckTokenCount_","onAppCheckRevoked_","query6","sendUnlisten_","queryObj","sendOnDisconnect_","onDisconnectRequestQueue_","response","hash","putInternal","undefined","outstandingPuts_","outstandingPutCount_","queued","errorReason","result","reqNum","onDataPush_","onSecurityDebugPacket_","lastConnectionEstablishedTime_","getTime","handleTimestamp_","firstConnection_","sendConnectStats_","restoreState_","establishConnectionTimer_","establishConnection_","scheduleConnect_","reconnectDelay_","maxReconnectDelay_","online","cancelSentTransactions_","shouldReconnect_","lastConnectionAttemptTime_","timeSinceLastConnectAttempt","reconnectDelay","min","$bpxeT","$2TvXO","mark","_callee","_ctx","prev","onDataMessage","onReady","onDisconnect6","onRealtimeDisconnect_","nextConnectionId_","canceled","sendRequestFn","closeFn","forceTokenRefresh_","t0","t1","sent","ref1","connection","$a9d69158b154a93b$var$Connection","t2","interruptReasons_","delta","put","query7","q","removeListen_","listen","normalizedPathString","map1","statusCode","explanation","invalidAuthTokenCount_","notifyForInvalidToken","tryAuth","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","queries","values","setMaxNode","MAX_NODE","i3","sendGet_","clientName","isReactNative","reportStats","isEmpty","warnings","safeGet","indexSpec","query8","_queryParams","getIndex","name3","node","NamedNode","Index","compare","oldNode","newNode","oldWrapped","$a9d69158b154a93b$var$NamedNode","newWrapped","MIN","KeyIndex","assertionError","$a9d69158b154a93b$var$KeyIndex","startKey","comparator","isReverse_","SortedMapIterator","cmp","right","nodeStack_","pop","left","resultGenerator_","LLRBNode","color","RED","$a9d69158b154a93b$var$SortedMap","EMPTY_NODE","count","inorderTraversal","reverseTraversal","min_","maxKey","n","copy","insert","fixUp_","smallest","isRed_","rotateRight_","moveRedRight_","removeMin_","colorFlip_","rotateLeft_","nl","nr","blackDepth","check_","BLACK","LLRBEmptyNode","$a9d69158b154a93b$var$LLRBNode","comparator_","SortedMap","root_","rightParent","minKey","setPriorityMaxNode","resultGenerator","$a9d69158b154a93b$var$SortedMapIterator","$a9d69158b154a93b$var$NAME_ONLY_COMPARATOR","$a9d69158b154a93b$var$NAME_COMPARATOR","$a9d69158b154a93b$var$LLRBEmptyNode","priority","$a9d69158b154a93b$var$doubleToIEEE754String","isLeafNode","priorityNode","$a9d69158b154a93b$var$MAX_NODE$2","getPriority","value_","priorityNode_","newPriorityNode","LeafNode","childName","__childrenNodeConstructor","childNode","newChildNode","front","$a9d69158b154a93b$var$pathGetFront","updateImmediateChild","updateChild","exportFormat","getValue","lazyHash_","toHash","$a9d69158b154a93b$var$priorityHashText","$l5bVx","$a9d69158b154a93b$var$sha1","otherLeafType","otherLeaf","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","equals","$a9d69158b154a93b$var$__childrenNodeConstructor","PriorityIndex","aPriority","bPriority","compareTo","indexCmp","$a9d69158b154a93b$var$PriorityIndex","Base12Num","num","$a9d69158b154a93b$var$LOG_2","bits_","mask","childList","keyFn","mapSortFn","namedNode","low","buildBalancedTree","middle","high","base12","chunkSize","childTree","pennant","root","chunkSize1","root1","indexSet_","IndexMap","indexes_","indexKey","sortedMap","indexDefinition","existingChildren","$a9d69158b154a93b$var$KEY_INDEX","newIndex","iter","getNext","sawIndexedValue","isDefinedOn","$a9d69158b154a93b$var$buildChildSet","getCompare","$a9d69158b154a93b$var$fallbackObject","indexName","newIndexes","assign","indexedChildren","existingSnap","newChildren","$a9d69158b154a93b$var$PRIORITY_INDEX","$a9d69158b154a93b$var$_defaultIndexMap","children_","indexMap_","ChildrenNode","child2","$a9d69158b154a93b$var$EMPTY_NODE","newIndexMap","addToIndexes","newPriority","newImmediateChild","getImmediateChild","numKeys","allIntegerKeys","forEachChild","INTEGER_REGEXP_","array","key1","childHash","idx","resolveIndex_","predecessor1","getPredecessorKey","getFirstChildName","getLastChildName","wrappedNode","getIteratorFrom","minPost","startPost","Wrap","peek","getReverseIteratorFrom","maxPost","endPost","$a9d69158b154a93b$var$MAX_NODE","hasIndex","addIndex","otherChildrenNode","otherIter","getIterator","thisCurrent","thisIter","otherCurrent","$a9d69158b154a93b$var$IndexMap","Default","ChildrenNode1","MaxNode","$a9d69158b154a93b$var$ChildrenNode","__EMPTY_NODE","$a9d69158b154a93b$var$nodeFromJSON","json","jsonLeaf","$a9d69158b154a93b$var$LeafNode","$a9d69158b154a93b$var$each","childData","children","childrenHavePriority","hinzeJsonObj","child3","sortedChildSet","childSet","$a9d69158b154a93b$var$PathIndex","PathIndex","indexPath_","snap","getChild","extractChild","aChild","bChild","valueNode","name6","$a9d69158b154a93b$var$pathSlice","ValueIndex","MAX","indexValue","name7","$a9d69158b154a93b$var$ValueIndex","$a9d69158b154a93b$var$changeValue","snapshotNode","$a9d69158b154a93b$var$changeChildAdded","$a9d69158b154a93b$var$changeChildRemoved","$a9d69158b154a93b$var$changeChildChanged","oldSnap","IndexedFilter","isIndexed","index_","oldChild","affectedPath","newChild","optChangeAccumulator","hasChild","trackChildChange","withIndex","newSnap","updatePriority","RangedFilter","$a9d69158b154a93b$var$IndexedFilter","getStartPost_","endPost_","getEndPost_","startPost_","getStartPost","getEndPost","indexedFilter_","source","filtered","self","matches","updateFullNode","hasStart","startName","getIndexStartName","makePost","getIndexStartValue","endName","getIndexEndName","LimitedFilter","rangedFilter_","$a9d69158b154a93b$var$RangedFilter","limit_","getLimit","reverse_","isViewFromLeft","numChildren","getIndexedFilter","fullLimitUpdateChild_","hasNext","iterator1","getReverseIterator","indexCompare","count1","next1","foundStartPost","oldEventCache","newChildNamedNode","childKey","childSnap","windowBoundary","getFirstChild","getLastChild","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","changeAccumulator","newEventCache","QueryParams","startSet_","startAfterSet_","endBeforeSet_","viewFrom_","indexStartValue_","startNameSet_","indexStartName_","endSet_","indexEndValue_","limitSet_","loadsAllData","copy1","endNameSet_","indexEndName_","$a9d69158b154a93b$var$queryParamsToRestQueryStringParameters","queryParams","isDefault","orderBy","$a9d69158b154a93b$var$VALUE_INDEX","qs","$a9d69158b154a93b$var$queryParamsGetQueryObject","viewFrom","$a9d69158b154a93b$var$ReadonlyRestClient","ReadonlyRestClient","listens_","query9","listenId","getListenId_","thisListen","queryStringParameters","query10","query11","deferred","restRequest_","promise","param","_param","_this7","querystring","xhr","XMLHttpRequest","responseText","query12","SnapshotHolder","rootNode_","newSnapshotNode","$a9d69158b154a93b$var$newSparseSnapshotTree","$a9d69158b154a93b$var$sparseSnapshotTreeRemember","sparseSnapshotTree","clear","func","forEach","tree","prefixPath","OperationType1","$a9d69158b154a93b$var$StatsListener","StatsListener","collection_","last_","newStats","stat","$a9d69158b154a93b$var$StatsReporter","StatsReporter","collection","server_","statsToReport_","statsListener_","referenceConstructor","reportedStats","haveStatsToReport","reportStats_","$a9d69158b154a93b$var$newOperationSourceServerTaggedQuery","fromUser","fromServer","tagged","$a9d69158b154a93b$var$OperationType","$a9d69158b154a93b$var$emptyChildrenSingleton","AckUserWrite","ACK_USER_WRITE","affectedTree","subtree","revert","$a9d69158b154a93b$var$ListenComplete","ListenComplete","$a9d69158b154a93b$var$pathIsEmpty","$a9d69158b154a93b$var$newEmptyPath","Overwrite","OVERWRITE","MERGE","Merge","$a9d69158b154a93b$var$CacheNode","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isCompleteForChild","EventGenerator","query_","filteredChanges","changes","filter","change","eventGenerator","aWrapped","bWrapped","$a9d69158b154a93b$var$eventGeneratorCompareChanges","eventCache","prevName","getPredecessorChildName","registration","respondsTo","events","createEvent","materializedChange","$a9d69158b154a93b$var$newViewCache","serverCache","$a9d69158b154a93b$var$viewCacheUpdateEventSnap","viewCache","eventSnap","complete","$a9d69158b154a93b$var$viewCacheUpdateServerSnap","serverSnap","$a9d69158b154a93b$var$viewCacheGetCompleteEventSnap","getNode","$a9d69158b154a93b$var$viewCacheGetCompleteServerSnap","$a9d69158b154a93b$var$EmptyChildren","$a9d69158b154a93b$var$ImmutableTree","ImmutableTree","relativePath","predicate","child5","childExistingPathAndValue","findRootMostMatchingPathAndValue","$a9d69158b154a93b$var$pathChild","toSet","child7","child8","newTree","setTree","fold_","pathSoFar","accum","findOnPath_","pathToFollow","foreachOnPath_","currentRelativePath","foreach_","childPath","$a9d69158b154a93b$var$CompoundWrite","CompoundWrite","writeTree_","$a9d69158b154a93b$var$compoundWriteAddWrite","compoundWrite","rootmost","findRootMostValueAndPath","rootMostPath","newWriteTree1","$a9d69158b154a93b$var$compoundWriteAddWrites","updates","newWrite","$a9d69158b154a93b$var$compoundWriteRemoveWrite","empty","newWriteTree2","$a9d69158b154a93b$var$compoundWriteHasCompleteWrite","$a9d69158b154a93b$var$compoundWriteGetCompleteNode","$a9d69158b154a93b$var$compoundWriteGetCompleteChildren","$a9d69158b154a93b$var$compoundWriteChildCompoundWrite","shadowingNode","$a9d69158b154a93b$var$compoundWriteIsEmpty","$a9d69158b154a93b$var$compoundWriteApply","$a9d69158b154a93b$var$applySubtreeWrite","writeTree","errorPrefix","errorPrefixFxn","priorityWrite","$a9d69158b154a93b$var$writeTreeChildWrites","$a9d69158b154a93b$var$newWriteTreeRef","$a9d69158b154a93b$var$writeTreeGetWrite","writeId","allWrites","record","$a9d69158b154a93b$var$writeTreeRemoveWrite","removedWriteWasVisible","writeToRemove","removedWriteOverlapsWithOtherWrites","currentWrite","$a9d69158b154a93b$var$writeTreeRecordContainsPath_","$a9d69158b154a93b$var$pathContains","visibleWrites","$a9d69158b154a93b$var$writeTreeLayerTree_","$a9d69158b154a93b$var$writeTreeDefaultFilter_","$a9d69158b154a93b$var$writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","child10","deepNode","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","merge","subMerge","$a9d69158b154a93b$var$writeTreeCalcCompleteEventCache","writeTreeRef","$a9d69158b154a93b$var$writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","$a9d69158b154a93b$var$writeTreeCalcCompleteEventChildren","$a9d69158b154a93b$var$writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","$a9d69158b154a93b$var$writeTreeCalcEventCacheAfterServerOverwrite","$a9d69158b154a93b$var$writeTreeRefShadowingWrite","$a9d69158b154a93b$var$writeTreeShadowingWrite","$a9d69158b154a93b$var$writeTreeRefCalcIndexedSlice","completeServerData","reverse","toIterate","nodes","$a9d69158b154a93b$var$writeTreeCalcIndexedSlice","$a9d69158b154a93b$var$writeTreeRefCalcCompleteChild","existingServerCache","$a9d69158b154a93b$var$writeTreeCalcCompleteChild","$a9d69158b154a93b$var$writeTreeRefChild","$a9d69158b154a93b$var$ChildChangeAccumulator","ChildChangeAccumulator","changeMap","oldChange","oldType","from","$a9d69158b154a93b$var$NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","child11","viewProcessor","oldViewCache","operation","writesCache","completeCache","newViewCache1","filterServerNode","$a9d69158b154a93b$var$viewProcessorApplyUserOverwrite","overwrite","accumulator","isFiltered","$a9d69158b154a93b$var$viewProcessorApplyServerOverwrite","changedChildren","curViewCache","foreach","$a9d69158b154a93b$var$viewProcessorCacheHasChild","ackUserWrite","$a9d69158b154a93b$var$writeTreeRefCalcCompleteEventCache","serverChildren","filtersNodes","$a9d69158b154a93b$var$viewProcessorRevertUserWrite","ackPath","name8","$a9d69158b154a93b$var$viewProcessorApplyServerMerge","changedChildren1","mergePath","serverCachePath","isCompleteForPath","$a9d69158b154a93b$var$viewProcessorAckUserWrite","newViewCache5","oldServerNode","getChanges","newViewCache2","isLeafOrEmpty","oldCompleteSnap","$a9d69158b154a93b$var$viewProcessorGenerateEventCacheAfterServerEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","newEventChild","childChangePath","eventChildUpdate","serverFilter","oldServerSnap","changedSnap","newServerNode","newServerCache","newViewCache4","$a9d69158b154a93b$var$WriteTreeCompleteChildSource","$a9d69158b154a93b$var$pathGetBack","$a9d69158b154a93b$var$pathParent","$a9d69158b154a93b$var$viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","View","initialViewCache","eventRegistrations_","indexFilter","hasLimit","$a9d69158b154a93b$var$LimitedFilter","processor_","$a9d69158b154a93b$var$newViewProcessor","initialEventCache","initialServerCache","eventGenerator_","$a9d69158b154a93b$var$EventGenerator","query","cache","$a9d69158b154a93b$var$viewRemoveEventRegistration","view","eventRegistration","cancelError","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","$a9d69158b154a93b$var$viewApplyOperation","$a9d69158b154a93b$var$viewProcessorApplyOperation","$a9d69158b154a93b$var$viewGenerateEventsForChanges_","registrations","eventRegistrations","moves","indexedValueChanged","$a9d69158b154a93b$var$eventGeneratorGenerateEventsForType","$a9d69158b154a93b$var$SyncPoint","SyncPoint","syncPoint","views","optCompleteServerCache","view1","$a9d69158b154a93b$var$syncPointGetView","query13","serverCacheComplete","eventCacheComplete","$a9d69158b154a93b$var$syncPointAddEventRegistration","query14","initialChanges","query15","$a9d69158b154a93b$var$syncPointHasCompleteView","cancelEvents","viewQueryId","view2","$a9d69158b154a93b$var$viewIsEmpty","removed","hadCompleteView","$a9d69158b154a93b$var$referenceConstructor$1","_repo","query16","query17","$a9d69158b154a93b$var$SyncTree","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","lastWriteId","$a9d69158b154a93b$var$writeTreeAddOverwrite","syncTree","newData","$a9d69158b154a93b$var$syncTreeApplyOperationToSyncPoints_","$a9d69158b154a93b$var$Overwrite","$a9d69158b154a93b$var$syncTreeAckUserWrite","needToReevaluate","$a9d69158b154a93b$var$AckUserWrite","$a9d69158b154a93b$var$syncTreeApplyServerOverwrite","query18","$a9d69158b154a93b$var$syncPointIsEmpty","maybeSyncPoint","removedAndEvents","query19","removingDefault","covered","newViews","$a9d69158b154a93b$var$syncTreeCollectDistinctViewsForSubTree_","$a9d69158b154a93b$var$syncTreeCreateListenerForView_","startListening","$a9d69158b154a93b$var$syncTreeQueryForListening_","newQuery","$a9d69158b154a93b$var$syncTreeTagForQuery","stopListening","defaultTag","queryToRemove","tagToRemove","$a9d69158b154a93b$var$syncTreeMakeQueryKey_","$a9d69158b154a93b$var$syncTreeQueryKeyForTag_","queryPath","$a9d69158b154a93b$var$syncTreeAddEventRegistration","query20","foundAncestorDefaultView","foreachOnPath","pathToSyncPoint","sp","$a9d69158b154a93b$var$syncPointGetCompleteServerCache","foreachChild","childSyncPoint","viewAlreadyExists","$a9d69158b154a93b$var$syncPointViewExistsForQuery","queryKey","$a9d69158b154a93b$var$syncPointViewForQuery","findOnPath","serverCache1","$a9d69158b154a93b$var$syncTreeGetServerValue","query21","serverCacheNode","$a9d69158b154a93b$var$syncTreeApplyOperationHelper_","syncPointTree","childOperation","childWritesCache","childServerCache","$a9d69158b154a93b$var$syncPointApplyOperation","query22","$a9d69158b154a93b$var$syncTreeParseQueryKey_","r","$a9d69158b154a93b$var$syncTreeApplyTaggedOperation_","$a9d69158b154a93b$var$syncTreeApplyTaggedListenComplete","$a9d69158b154a93b$var$syncTreeApplyListenComplete","code","query1","$a9d69158b154a93b$var$errorForServerCode","query23","splitIndex","query25","$a9d69158b154a93b$var$referenceConstructor","removedQuery","removedQueryKey","removedQueryTag","$a9d69158b154a93b$var$syncTreeNextQueryTag_","$a9d69158b154a93b$var$syncTreeSetupListener_","query26","view3","maybeChildSyncPoint","$a9d69158b154a93b$var$syncPointGetQueryViews","childQueries","$a9d69158b154a93b$var$ExistingValueProvider","ExistingValueProvider","$a9d69158b154a93b$var$DeferredValueProvider","DeferredValueProvider","path_","$a9d69158b154a93b$var$syncTreeCalcCompleteEventCache","syncTree_","$a9d69158b154a93b$var$resolveDeferredLeafValue","existingVal","serverValues","$a9d69158b154a93b$var$resolveComplexDeferredValue","op","existingNode","$a9d69158b154a93b$var$resolveDeferredValueTree","$a9d69158b154a93b$var$resolveDeferredValue","$a9d69158b154a93b$var$resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","$a9d69158b154a93b$var$Tree","Tree","parent","$a9d69158b154a93b$var$treeSubTree","pathObj","childCount","child13","$a9d69158b154a93b$var$treeSetValue","$a9d69158b154a93b$var$treeUpdateParents","$a9d69158b154a93b$var$treeHasChildren","$a9d69158b154a93b$var$treeForEachChild","child14","$a9d69158b154a93b$var$treeForEachDescendant","includeSelf","childrenFirst","child15","$a9d69158b154a93b$var$treeGetPath","child16","childEmpty","$a9d69158b154a93b$var$treeGetValue","$a9d69158b154a93b$var$treeIsEmpty","childExists","$a9d69158b154a93b$var$treeUpdateChild","$a9d69158b154a93b$var$INVALID_KEY_REGEX_","$a9d69158b154a93b$var$INVALID_PATH_REGEX_","$a9d69158b154a93b$var$validateFirebaseDataArg","fnName","$a9d69158b154a93b$var$validateFirebaseData","errorPrefix1","$a9d69158b154a93b$var$ValidationPath","$a9d69158b154a93b$var$MAX_LEAF_SIZE_","hasDotValue","hasActualChild","child1","last","replace","$a9d69158b154a93b$var$isValidPathString","search","creatorFunction","changeTree","fromObject","$a9d69158b154a93b$var$Merge","enableLoggingImpl","ReferenceError","$84ebd01c1ddf4bef$var$asyncGeneratorStep","gen","_next","_throw","info","subClass","superClass","create","constructor","$ae7f60fd48750bb9$var$_setPrototypeOf","__esModule","$c1b1a34fae3d3c27$var$setPrototypeOf","o1","p1","setPrototypeOf","o","__proto__","arr","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","len","arr2","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","$f215c72f040a88cf$var$_arrayLikeToArray","Derived","hasNativeReflectConstruct","$2059300b4b5a348b$var$_isNativeReflectConstruct","Super","$2059300b4b5a348b$var$_getPrototypeOf","NewTarget","Reflect","construct","$2059300b4b5a348b$var$_possibleConstructorReturn","$2059300b4b5a348b$var$_interopRequireDefault","sham","Proxy","Boolean","valueOf","$b9926a5835d271e3$var$getPrototypeOf","getPrototypeOf","$e17dad4ea3dafe1a$var$_typeOf","$e17dad4ea3dafe1a$var$_assertThisInitialized","$e17dad4ea3dafe1a$var$_interopRequireDefault","$21b983287c82ebd3$var$runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","err1","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","abrupt","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","value1","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","awrap","async","object","skipTempReset","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","container","PlatformLoggerServiceImpl","getProviders","provider","$0913f93b5b3c9bac$var$isVersionServiceProvider","$0913f93b5b3c9bac$var$_obj","$0913f93b5b3c9bac$var$logger","$0913f93b5b3c9bac$export$9f30fa0c10967f7f","$0913f93b5b3c9bac$var$PLATFORM_LOG_STRING","$hKHmD","$0913f93b5b3c9bac$var$name$o","app","component","debug","componentName","$0913f93b5b3c9bac$export$fa5244b94c62d36a","$0913f93b5b3c9bac$export$fa0d6da0f5838f50","name1","heartbeatController","getProvider","triggerHeartbeat","$0913f93b5b3c9bac$var$ERRORS","$0913f93b5b3c9bac$var$_obj1","$0913f93b5b3c9bac$var$ERROR_FACTORY","ErrorFactory","$0913f93b5b3c9bac$var$FirebaseAppImpl","checkDestroyed","_name","_options","_config","_container","setLogLevelImpl","_isDeleted","isDeleted","appName","FirebaseAppImpl","rawConfig","$6ExWU","ComponentContainer","$0913f93b5b3c9bac$export$9566bce3835c0f28","name5","$0913f93b5b3c9bac$export$b4e3c36c855b14b5","libraryKeyOrName","version1","variant","Component","library","$0913f93b5b3c9bac$var$STORE_NAME","$0913f93b5b3c9bac$var$getDbPromise","$0913f93b5b3c9bac$var$dbPromise","$ajgRO","openDB","oldVersion","transaction","objectStore","$0913f93b5b3c9bac$var$computeKey","FirebaseError","idbGetError","originalErrorMessage","$0913f93b5b3c9bac$var$writeHeartbeatsToIndexedDB","heartbeatObject","tx","_storage","read","agent","platformLogger","getPlatformInfoString","date","$0913f93b5b3c9bac$var$getUTCDateString","_heartbeatsCache","hbTimestamp","singleDateHeartbeat","heartbeatsToSend","unsentEntries","headerString","instanceFactory","multipleInstances","onInstanceCreated","Provider","identifier","instancesDeferred","normalizedIdentifier","isInitialized","shouldAutoInitialize","instanceIdentifier","entries","getOrInitializeService","instancesOptions","instances","services","service","INTERNAL","_delete","$4d80d01579d5bd6a$var$DEFAULT_ENTRY_NAME","opts","normalizeInstanceIdentifier","isComponentSet","_value","instanceDeferred","normalizedDeferredIdentifier","existingCallbacks","onInitCallbacks","existingInstance","callbacks","invokeOnInitCallbacks","$1d9d263a787f8021$export$588c7fdda06fbb0a","assertion","$1d9d263a787f8021$export$a39cad550e7ab28a","$1d9d263a787f8021$var$stringToByteArray$1","out","charCodeAt","charToByteMapWebSafe_","ENCODED_VALS_BASE","HAS_NATIVE_SUPPORT","atob","input","webSafe","init_","byteToCharMap","byteToCharMapWebSafe_","byteToCharMap_","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","bytes","pos","c1","fromCharCode","c2","u","c22","c31","$1d9d263a787f8021$var$byteArrayToString","decodeStringToByteArray","charToByteMap","byte4","charToByteMap_","ENCODED_VALS","ENCODED_VALS_WEBSAFE","$1d9d263a787f8021$export$e510a73ee562749","utf8Bytes","$1d9d263a787f8021$export$b3b2de96497acc47","$1d9d263a787f8021$export$4b5284a3025a455","$1d9d263a787f8021$export$c62426fdd000a97e","decodeString","$1d9d263a787f8021$export$54e9fb29908872fa","prop","$1d9d263a787f8021$export$367bf224123348f1","projectId","project","iat","sub","user_id","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","alg","$1d9d263a787f8021$export$c36915b22ce77c19","$1d9d263a787f8021$export$f7a1e23e542d38e3","$1d9d263a787f8021$export$5d1d834fbbf8bab7","indexedDB","$1d9d263a787f8021$export$a8a3018f3d187a4d","preExist","DB_CHECK_NAME","onsuccess","deleteDatabase","onupgradeneeded","Error1","customData","$4c7YB","serviceName","errors","template","$1d9d263a787f8021$var$replaceTemplate","fullCode","$1d9d263a787f8021$export$dd24e9cd51226c56","fullMessage","$1d9d263a787f8021$var$PATTERN","_","$1d9d263a787f8021$export$fac44ee5b035f737","$1d9d263a787f8021$export$c5a53ce6a17cf18d","parts","claims","signature","$1d9d263a787f8021$export$2f872c0f2117be69","contextObj","includes","bProp","$1d9d263a787f8021$var$isObject","aProp","$1d9d263a787f8021$export$9cb4719e2e525b7a","bKeys","k1","aKeys","thing","$1d9d263a787f8021$export$ac4103b836844853","querystringParams","_step2","arrayVal","encodeURIComponent","Class","$30de785adf49c647$var$wrapNativeSuper","$30de785adf49c647$var$_construct","$30de785adf49c647$var$_interopRequireDefault","$30de785adf49c647$var$_isNativeFunction","$30de785adf49c647$var$_getPrototypeOf","$30de785adf49c647$var$_setPrototypeOf","Class1","_cache","Wrapper","Parent","$bd045042b29ce6c9$var$construct","$bd045042b29ce6c9$var$_setPrototypeOf","$bd045042b29ce6c9$var$isNativeReflectConstruct","Parent1","args1","$f4758df7279d6c6a$export$243e62d78d3b544d","LogLevel1","$f4758df7279d6c6a$var$instances","DEBUG","INFO","WARN","ERROR","logType","toISOString","$f4758df7279d6c6a$var$ConsoleMethod","_console","now","_logLevel","$f4758df7279d6c6a$var$defaultLogLevel","$f4758df7279d6c6a$var$defaultLogHandler","_userLogHandler","$f4758df7279d6c6a$var$levelStringToEnum","_logHandler","$7818c326be87ea84$export$ca0ed41b1a2af7e","version","blocked","upgrade","blocking","terminated","openPromise","$kKOTz","w","event","newVersion","$7818c326be87ea84$var$readMethods","$7818c326be87ea84$var$writeMethods","$7818c326be87ea84$var$cachedMethods","$7818c326be87ea84$var$getMethod","IDBDatabase","targetFuncName","useIndex","isWrite","IDBIndex","IDBObjectStore","storeName","_target","_$target","store","oldTraps","$dDDEV","receiver","ownKeys","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","$9eddae5a012cde57$var$_defineProperty","$f1bf9542bc9ee5ed$var$idbProxyableTypes","$f1bf9542bc9ee5ed$var$cursorAdvanceMethods","$f1bf9542bc9ee5ed$var$cursorRequestMap","WeakMap","$f1bf9542bc9ee5ed$var$transactionDoneMap","$f1bf9542bc9ee5ed$var$transactionStoreNamesMap","$f1bf9542bc9ee5ed$var$transformCache","$f1bf9542bc9ee5ed$export$407448d2b89b1813","$f1bf9542bc9ee5ed$var$idbProxyTraps","IDBTransaction","objectStoreNames","$f1bf9542bc9ee5ed$export$efccba1c4a2ef57b","$f1bf9542bc9ee5ed$export$43caf9889c228507","$f1bf9542bc9ee5ed$var$wrapFunction","IDBCursor","advance","continue","continuePrimaryKey","$f1bf9542bc9ee5ed$export$3b14a55fb2447963","storeNames","_func","$f1bf9542bc9ee5ed$var$transformCachableValue","unlisten","removeEventListener","DOMException","$f1bf9542bc9ee5ed$var$cacheDonePromiseForTransaction","some","IDBRequest","success","newValue","$4acf49f6c3e67aec$var$cachedSetTimeout","$4acf49f6c3e67aec$var$cachedClearTimeout","$4acf49f6c3e67aec$var$process","$4acf49f6c3e67aec$var$defaultSetTimout","$4acf49f6c3e67aec$var$defaultClearTimeout","$4acf49f6c3e67aec$var$runTimeout","fun","$4acf49f6c3e67aec$var$currentQueue","$4acf49f6c3e67aec$var$queue","$4acf49f6c3e67aec$var$draining","$4acf49f6c3e67aec$var$queueIndex","$4acf49f6c3e67aec$var$cleanUpNextTick","$4acf49f6c3e67aec$var$drainQueue","run","marker","$4acf49f6c3e67aec$var$runClearTimeout","$4acf49f6c3e67aec$var$Item","$4acf49f6c3e67aec$var$noop","nextTick","browser","argv","versions","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","$3dbg1","$ec0db8c709555c1f$var$refs","openModalBtn","closeModalBtn","modal","registerForm","registerBtn","authModal","authForm","getElementById","regForm","backToLoginBtn","modalForm","classList","position","top","scrollY","scrollTo","parseInt","autentification","$MjY8E","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","appId","$256b517cdd22ff08$export$ceab792ff7e873a2","evt","preventDefault","email","$iotNY","alert","$256b517cdd22ff08$export$223d4acd43b642ca","userData","$lJO36","setCurrentUserFilmList","renderWatchedFilms","click","$256b517cdd22ff08$export$e12132504150ff48","$256b517cdd22ff08$export$dc74a141cc48da2e","userNikName","navUserName","html","$iitvU","$d641968783c745ae$export$2e2bcd8739ae039","pas","$d520cd3cd9b83861$export$2e2bcd8739ae039","closeModal","stopPropagation","closest","scroll","currentCardId","dataset","$6ZdKR","$iY7oS","genreList","vote_count","popularity","original_title","overview","form_html","isFilmExistInWatched","isFilmExistInQueue","$jrZwl","actionWatch","actionQueue","width","$eb999ef253053d6e$var$axios","$eb999ef253053d6e$var$createInstance","defaultConfig","$9jbh3","$lGmLA","$c4C4W","extend","instanceConfig","$knWMA","Axios","CanceledError","CancelToken","isCancel","VERSION","toFormData","AxiosError","Cancel","promises","spread","isAxiosError","$8ca3655f37d9652c$var$toString","$8ca3655f37d9652c$var$kindOf","$8ca3655f37d9652c$var$kindOfTest","$8ca3655f37d9652c$var$isArray","$8ca3655f37d9652c$var$isUndefined","$8ca3655f37d9652c$var$isArrayBuffer","$8ca3655f37d9652c$var$isObject","$8ca3655f37d9652c$var$isPlainObject","$8ca3655f37d9652c$var$isDate","$8ca3655f37d9652c$var$isFile","$8ca3655f37d9652c$var$isBlob","$8ca3655f37d9652c$var$isFileList","$8ca3655f37d9652c$var$isFunction","$8ca3655f37d9652c$var$isURLSearchParams","$8ca3655f37d9652c$var$forEach","l","TypedArray","$8ca3655f37d9652c$var$isTypedArray","Uint8Array","isArrayBuffer","isBuffer","isFormData","pattern","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isObject","isPlainObject","isUndefined","isDate","isFile","isBlob","isFunction","isStream","pipe","isURLSearchParams","isStandardBrowserEnv","product","$8ca3655f37d9652c$var$merge","assignValue","thisArg","trim","stripBOM","content","inherits","superConstructor","descriptors","toFlatObject","sourceObj","destObj","merged","getOwnPropertyNames","kindOf","kindOfTest","endsWith","searchString","lastIndex","toArray","isTypedArray","isFileList","$6c6ea2375c06af66$var$validators","$9SeBc","validators","$6c6ea2375c06af66$var$Axios","defaults","interceptors","$JRZh2","configOrUrl","config","transitional","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","clarifyTimeoutError","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","$k04r0","newConfig","onFulfilled","onRejected","getUri","fullPath","$gYMA1","baseURL","$6d5Pb","paramsSerializer","generateHTTPMethod","isForm","$4858799f155a4706$var$encode","serializedParams","hashmarkIndex","$089e14d5c08cea15$var$InterceptorManager","handlers","use","eject","h","$03c1ec60679d4a92$var$throwIfCancellationRequested","cancelToken","throwIfRequested","signal","aborted","$dW1zJ","$jrAxF","transformRequest","common","adapter","$c74ni","transformResponse","$lXDKh","fns","$8d19883a18ea96be$var$DEFAULT_CONTENT_TYPE","$8d19883a18ea96be$var$setContentTypeIfUnset","$8d19883a18ea96be$var$defaults","$gWbUy","$h8JMh","isObjectPayload","contentType","_FormData","$12Kat","rawValue","parser","encoder","$8d19883a18ea96be$var$stringifySafely","strictJSONParsing","responseType","$5TB86","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","Accept","normalizedName","toUpperCase","$44aee3fe793a4c74$var$AxiosError","toJSON","description","number","fileName","lineNumber","columnNumber","$44aee3fe793a4c74$var$prototype","$44aee3fe793a4c74$var$descriptors","defineProperties","customProps","axiosError","formData","convertValue","Blob","$0c29ca57d54f85e9$require$Buffer","build","parentKey","fullKey","el","append","$24f87a6f86a8996f$export$a143d493d941bafc","$24f87a6f86a8996f$export$f99ded8fe4b79145","$24f87a6f86a8996f$var$customInspectSymbol","$24f87a6f86a8996f$var$Buffer","$24f87a6f86a8996f$var$K_MAX_LENGTH","$24f87a6f86a8996f$var$createBuffer","RangeError","buf","encodingOrOffset","$24f87a6f86a8996f$var$allocUnsafe","$24f87a6f86a8996f$var$from","string","encoding","isEncoding","$24f87a6f86a8996f$var$byteLength","actual","$24f87a6f86a8996f$var$fromString","arrayView","$24f87a6f86a8996f$var$isInstance","$24f87a6f86a8996f$var$fromArrayBuffer","byteOffset","byteLength","$24f87a6f86a8996f$var$fromArrayLike","$24f87a6f86a8996f$var$fromArrayView","SharedArrayBuffer","$24f87a6f86a8996f$var$checked","$24f87a6f86a8996f$var$numberIsNaN","$24f87a6f86a8996f$var$fromObject","toPrimitive","$24f87a6f86a8996f$var$assertSize","mustMatch","loweredCase","$24f87a6f86a8996f$var$utf8ToBytes","$24f87a6f86a8996f$var$base64ToBytes","$24f87a6f86a8996f$var$slowToString","end","$24f87a6f86a8996f$var$hexSlice","$24f87a6f86a8996f$var$utf8Slice","$24f87a6f86a8996f$var$asciiSlice","$24f87a6f86a8996f$var$latin1Slice","$24f87a6f86a8996f$var$base64Slice","$24f87a6f86a8996f$var$utf16leSlice","$24f87a6f86a8996f$var$swap","$24f87a6f86a8996f$var$bidirectionalIndexOf","$24f87a6f86a8996f$var$arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","$24f87a6f86a8996f$var$hexWrite","offset","strLen","parsed","$24f87a6f86a8996f$var$utf8Write","$24f87a6f86a8996f$var$blitBuffer","$24f87a6f86a8996f$var$asciiWrite","byteArray","$24f87a6f86a8996f$var$asciiToBytes","$24f87a6f86a8996f$var$base64Write","$24f87a6f86a8996f$var$ucs2Write","units","hi","lo","$24f87a6f86a8996f$var$utf16leToBytes","$5d11t","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","$24f87a6f86a8996f$var$MAX_ARGUMENTS_LENGTH","$24f87a6f86a8996f$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$24f87a6f86a8996f$var$typedArraySupport","poolSize","alloc","fill","$24f87a6f86a8996f$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","x","y","swap16","swap32","swap64","toLocaleString","inspect","thisStart","thisEnd","thisCopy","targetCopy","isFinite","_arr","ret","$24f87a6f86a8996f$var$hexSliceLookupTable","$24f87a6f86a8996f$var$checkOffset","ext","$24f87a6f86a8996f$var$checkInt","$24f87a6f86a8996f$var$wrtBigUInt64LE","$24f87a6f86a8996f$var$checkIntBI","BigInt","$24f87a6f86a8996f$var$wrtBigUInt64BE","$24f87a6f86a8996f$var$checkIEEE754","$24f87a6f86a8996f$var$writeFloat","littleEndian","noAssert","$7rddL","$24f87a6f86a8996f$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","byteLength1","mul","readUintBE","readUIntBE","byteLength2","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$24f87a6f86a8996f$var$defineBigIntMethod","$24f87a6f86a8996f$var$validateNumber","first","$24f87a6f86a8996f$var$boundsError","readBigUInt64BE","readIntLE","byteLength3","readIntBE","byteLength4","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","byteLength5","writeUintBE","writeUIntBE","byteLength6","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","byteLength7","limit","writeIntBE","byteLength8","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$24f87a6f86a8996f$var$errors","$24f87a6f86a8996f$var$E","getMessage","Base1","Base","NodeError","$24f87a6f86a8996f$var$addNumericalSeparator","byteLength10","range","ERR_OUT_OF_RANGE","byteLength9","$24f87a6f86a8996f$var$checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","isInteger","abs","$24f87a6f86a8996f$var$INVALID_BASE64_RE","leadSurrogate","toByteArray","$24f87a6f86a8996f$var$base64clean","dst","alphabet","table","i16","$24f87a6f86a8996f$var$BufferBigIntNotDefined","$3caef5c332c7293f$export$d622b2ad8d90c771","$3caef5c332c7293f$export$6100ba28696e12de","b64","tmp","lens","$3caef5c332c7293f$var$getLens","validLen","placeHoldersLen","$3caef5c332c7293f$var$Arr","$3caef5c332c7293f$var$_byteLength","curByte","len2","$3caef5c332c7293f$var$revLookup","uint8","len3","extraBytes","maxChunkLength","$3caef5c332c7293f$var$encodeChunk","$3caef5c332c7293f$var$lookup","$3caef5c332c7293f$var$code","$3caef5c332c7293f$var$i","$3caef5c332c7293f$var$len","len1","i2","$56a54f6ebabce67d$export$aafa59e2e03f2942","$56a54f6ebabce67d$export$68d8715fc104d294","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","onCanceled","requestHeaders","unsubscribe","username","unescape","Authorization","onloadend","responseHeaders","$1nUSP","getAllResponseHeaders","statusText","$j97bH","responseURL","onabort","ECONNABORTED","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","xsrfValue","withCredentials","$9jFfm","$jFG8L","setRequestHeader","onDownloadProgress","onUploadProgress","upload","cancel","abort","subscribe","$4ULKu","ERR_BAD_REQUEST","expires","cookie","toGMTString","decodeURIComponent","requestedURL","$7xjuH","$ftRZn","relativeURL","$102410410d0dc09d$var$ignoreDuplicateOf","line","originURL","msie","urlParsingNode","resolveURL","setAttribute","port","pathname","requestURL","$a251e9fa67c89486$var$CanceledError","ERR_CANCELED","__CANCEL__","exec","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","$73047b42f9e782d3$var$validators","$73047b42f9e782d3$var$deprecatedWarnings","validator","formatMessage","opt","desc","$73047b42f9e782d3$require$VERSION","ERR_DEPRECATED","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","$52ff30ac6ac58fe8$var$CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","$dcf392246d28f9b0$export$2e2bcd8739ae039","$51631c0049e58842$var$_getMovieDetails","api_key","movie_id","$dIxxU","$51631c0049e58842$export$2e2bcd8739ae039","$e29042a692cc87fe$export$a66669cec878639","filmData","currentUserName","createWithtAuth","textContent","currentUserName1","removeWithAuth","$e29042a692cc87fe$export$bd8f2a4eafd013c2","currentUserName2","$9ba58a86235e7273$export$fe377cc3ceec5d02","scrollTop","documentElement","$9ba58a86235e7273$export$2e2bcd8739ae039","scrollUp","onscroll"],"version":3,"file":"library.8082c968.js.map"}